{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./public/img/bpl-logo.png","webpack:///./src/server/middleware/renderer.js","webpack:///./src/server/server.js","webpack:///./src/shared/App.js","webpack:///./src/shared/CalculatorScreen/CalculatorScreen.js","webpack:///./src/shared/DelegateScreen/DelegateScreen.js","webpack:///./src/shared/RoundScreen/CompletedSlots.js","webpack:///./src/shared/RoundScreen/RoundProgress.js","webpack:///./src/shared/RoundScreen/RoundScreen.js","webpack:///./src/shared/RoundScreen/RoundStats.js","webpack:///./src/shared/RoundScreen/UpcomingSlots.js","webpack:///./src/shared/domain/api/NodeApi.js","webpack:///./src/shared/domain/util/format.js","webpack:///./src/shared/domain/util/logger.js","webpack:///./src/shared/domain/util/sorters.js","webpack:///./src/shared/domain/util/time.js","webpack:///./src/shared/stores/BlockStore.js","webpack:///./src/shared/stores/DelegateStore.js","webpack:///./src/shared/stores/RoundStore.js","webpack:///./src/shared/stores/SlotStore.js","webpack:///./src/shared/stores/slotFactory.js","webpack:///external \"@babel/polyfill\"","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/colors/green\"","webpack:///external \"@material-ui/core/colors/red\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/Announcement\"","webpack:///external \"@material-ui/icons/CheckCircle\"","webpack:///external \"@material-ui/icons/Update\"","webpack:///external \"big-js\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"javascript-time-ago\"","webpack:///external \"javascript-time-ago/locale/en\"","webpack:///external \"mobx\"","webpack:///external \"mobx-react\"","webpack:///external \"mobx-task\"","webpack:///external \"node-fetch\"","webpack:///external \"path\"","webpack:///external \"querystring\"","webpack:///external \"react\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-jss/lib/JssProvider\"","webpack:///external \"react-jss/lib/jss\"","webpack:///external \"react-router-dom\""],"names":["renderFullPage","html","css","Promise","resolve","reject","filePath","__dirname","err","page","replace","req","res","sheetsRegistry","SheetsRegistry","console","log","url","theme","palette","primary","green","accent","red","type","generateClassName","nodeApi","NodeApi","delegateStore","DelegateStore","roundStore","RoundStore","blockStore","BlockStore","slotStore","SlotStore","stores","Map","toString","runner","pageHtml","send","status","end","app","use","get","renderer","express","static","listen","styles","content","marginTop","padding","minHeight","flex","menuButton","marginLeft","marginRight","App","classes","props","logo","height","verticalAlign","RoundScreen","DelegateScreen","CalculatorScreen","Component","match","setActiveDelegate","params","address","pending","rejected","message","resolved","activeDelegate","missedBlockAvatar","backgroundColor","error","main","successfulBlockAvatar","CompletedSlot","hasMissedBlock","rest","CompletedForgedSlot","name","rank","slot","timestamp","totalForged","vote","toFixed","Date","toLocaleString","CompletedMissedSlot","CollapsableSlot","ListItem","slotInProcess","shouldBeVisible","slotJoinedCompleted","CompletedSlots","Incoming","hasSlotInProcess","hasLeftUpcoming","completedSlots","init","map","forger","RoundProgress","remainingSlotCount","successfulForgeCount","missedBlockCount","MiddleColumn","hasCompletedSlotsForRound","hasNewRound","newRound","roundNumber","RoundStats","totalForgedAmount","UpcomingSlot","slotLeftUpcoming","UpcomingSlots","Outgoing","upcomingSlots","concat","unprocessedSlots","api","makeApiRequest","query","qs","stringify","requestUrl","method","rawResponse","json","response","success","Error","offset","limit","generatorPublicKey","senderId","recipientId","publicKey","TimeAgo","locale","en","timeAgo","fromApiString","bplString","div","toHowLong","format","apply","Array","prototype","slice","call","arguments","byAscending","prop","a","b","byDescending","blockInterval","epochTimeUtc","UTC","epochSeconds","Math","floor","currentMsTimestamp","now","fromApiToMs","apiTimestamp","getApiTimestamp","currentSeconds","nextMsTimestamp","msTimestamp","getTimestamp","blockListener","lastProcessedBlockHeight","unprocessedBlocks","resume","setInterval","listenForNewBlocks","suspend","clearInterval","initialBlockHeight","hasLoadedNewBlocks","hasNextBlock","getBlocks","blocks","newBlocks","filter","length","forEach","set","size","next","nextBlockHeight","has","computed","observable","action","nextBlock","activeAddress","addressToPublicKey","delegates","isInitialized","getActiveDelegates","d","hasLoadedDelegates","task","getCurrentRound","currentRound","delegateActivity","reduce","initialHeight","slotValue","fromBlock","isAwaitingBlock","isAwaitingSlot","roundSlots","result","watchForNextBlock","watchForUnprocessedSlot","completed","upcoming","s","processReceivedBlock","totalSlot","blockSlots","all","hasFoundProcessedSlot","push","completedSlot","block","totalSlotCount","roundSlot","getRoundSlot","matchingDelegate","lastSlot","additionalSlots","hasUnprocessedSlots","processNextSlot","shift","nextSlot","nextUnprocessedSlot","setTimeout","unshift","sum","plus","createSlotFromBlock","blockProps","completedSlotFromDelegate","delegate","basicSlot","number","username","rate","getSlotsFromInitialData","lastTimestamp","expectedForgers","blockRoundSlot","sort"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = __webpack_public_path__ + \"static/media/bpl-logo.8b1be392.png\";","import React from 'react'\nimport { readFile } from 'fs'\nimport { resolve as resolvePath } from 'path'\nimport { Provider as MobxProvider } from 'mobx-react'\nimport { renderToString } from 'react-dom/server'\nimport { SheetsRegistry } from 'react-jss/lib/jss'\nimport JssProvider from 'react-jss/lib/JssProvider'\nimport { StaticRouter } from 'react-router-dom'\nimport { MuiThemeProvider, createMuiTheme, createGenerateClassName, } from '@material-ui/core/styles'\nimport green from '@material-ui/core/colors/green'\nimport red from '@material-ui/core/colors/red'\n\nimport App from '../../shared/App'\nimport BlockStore from '../../shared/stores/BlockStore'\nimport DelegateStore from '../../shared/stores/DelegateStore'\nimport NodeApi from '../../shared/domain/api/NodeApi'\nimport RoundStore from '../../shared/stores/RoundStore'\nimport SlotStore from '../../shared/stores/SlotStore'\n\n\nconst renderFullPage = async (html, css) => \n  new Promise((resolve, reject) => {\n    const filePath = resolvePath(__dirname, '..', '..', '..', 'public', 'index.html')\n  \n    readFile(filePath, 'utf8', (err, page) => {\n      if (err) {\n        return reject(err)\n      }\n\n      resolve(page.replace(\n        '<div id=\"root\"></div>',\n        `<div id=\"root\">${html}</div>`\n      ).replace(\n        '<style id=\"jss-server-side\"></style>',\n        `<style id=\"jss-server-side\">${css}</style>`\n      ))\n    })\n  })\n\n\nexport default (req, res) => {\n  // Create a sheetsRegistry instance.\n  const sheetsRegistry = new SheetsRegistry()\n\n  console.log(`Serving ${req.url}`)\n\n  // Create a theme instance.\n  const theme = createMuiTheme({\n    palette: {\n      primary: green,\n      accent: red,\n      type: 'light',\n    },\n  })\n\n  const generateClassName = createGenerateClassName()\n  const nodeApi = new NodeApi()\n  const delegateStore = new DelegateStore(nodeApi)\n  const roundStore = new RoundStore(nodeApi)\n  const blockStore = new BlockStore(nodeApi, roundStore)\n  const slotStore = new SlotStore(blockStore, delegateStore, roundStore)\n  \n  const stores = {\n    blockStore,\n    delegateStore,\n    roundStore,\n    slotStore,\n  }\n\n  // Render the component to a string.\n  const html = renderToString(\n    <JssProvider registry={sheetsRegistry} generateClassName={generateClassName}>\n      <MuiThemeProvider theme={theme} sheetsManager={new Map()}>\n        <MobxProvider {... stores}>\n          <StaticRouter location={req.url} context={{}}>\n            <App />\n          </StaticRouter>\n        </MobxProvider>\n      </MuiThemeProvider>\n    </JssProvider>\n  )\n\n  // Grab the CSS from our sheetsRegistry.\n  const css = sheetsRegistry.toString()\n\n  const runner = async () => {\n    try {\n      const pageHtml = await renderFullPage(html, css)\n      res.send(pageHtml)\n    } catch (ex) {\n      console.log(`Error in server: ${ex}`)\n      res.status(500).end()\n    }\n  }\n  runner()\n}\n","import express from 'express'\nimport cors from 'cors'\n\nimport renderer from './middleware/renderer'\n\n\nconst app = express()\n\napp.use(cors())\n\napp.get('^/$', renderer)\n\napp.use(express.static('public'))\n\napp.get('*', renderer)\n\napp.listen(3000, () => {\n  console.log(`Server is listening on port: 3000`)\n})\n","import React, { Component } from 'react'\nimport {\n  AppBar,\n  CssBaseline,\n  Hidden,\n  Toolbar,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport { Link, Route, Switch } from 'react-router-dom'\n\nimport logo from '../../public/img/bpl-logo.png'\nimport CalculatorScreen from './CalculatorScreen/CalculatorScreen'\nimport DelegateScreen from './DelegateScreen/DelegateScreen'\nimport RoundScreen from './RoundScreen/RoundScreen'\n\n\nconst styles = theme => ({\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100% - 123px)\"\n  },\n  flex: {\n    flex: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n});\n\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"fixed\">\n          <Toolbar>\n            <Typography\n              variant=\"title\"\n              color=\"inherit\"\n              className={classes.flex}\n            >\n              <img\n                src={logo}\n                alt=\"BPL logo\"\n                style={{ height: '1.16667em', verticalAlign: 'bottom' }}\n              />\n              <span style={{ marginLeft: '15px' }}>\n                <Link to=\"/\">BPL Delegate Explorer</Link>\n              </span>\n            </Typography>\n\n            <Link to=\"/calculator\">Calculator</Link>\n            <Hidden smDown>\n              <Typography color=\"inherit\" />\n            </Hidden>\n          </Toolbar>\n        </AppBar>\n\n        <div className={classes.content}>\n          <Switch>\n            <Route path=\"/\" exact component={RoundScreen} />\n            <Route path=\"/delegate/:address\" component={DelegateScreen} />\n            <Route path=\"/calculator\" exact component={CalculatorScreen} />\n          </Switch>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","import React, { Component } from 'react'\n\nexport default class CalculatorScreen extends Component {\n  render() {\n    return (\n      <div>Calculator Screen</div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport { Grid } from '@material-ui/core'\nimport { inject, observer } from 'mobx-react'\n\n\n\nexport class DelegateScreen extends Component {\n  async componentDidMount() {\n    const { delegateStore, match } = this.props\n    delegateStore.setActiveDelegate(match.params.address)\n  }\n\n  render() {\n    const { delegateStore } = this.props\n\n    return (\n      <React.Fragment>\n        <Grid container>\n        {delegateStore.setActiveDelegate.match({\n          pending: () => <div>Loading, please wait..</div>,\n          rejected: (err) => <div>Error: {err.message}</div>,\n          resolved: () => (\n            <Grid item>\n              Delegate - {delegateStore.activeDelegate.address}\n            </Grid>\n          )\n        })}\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default inject('roundStore', 'delegateStore')(observer(DelegateScreen))\n\n/*\n        <Grid container>\n          <ItemGrid xs={12} sm={8}>\n            <RegularCard\n              cardTitle={title}\n              cardSubtitle=\"\"\n              content={\n                selectedDelegateStore.hasSelectedDelegate ? (\n                  <DelegateInfo />\n                ) : (\n                  <div>No delegate</div>\n                )\n              }\n            />\n          </ItemGrid>\n\n          <ItemGrid xs={12} sm={4}>\n            <BplPrice />\n            <EstimatedReward />\n          </ItemGrid>\n        </Grid>\n        <DelegateActivity />\n*/\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Link } from 'react-router-dom'\nimport { \n          Avatar,\n          Collapse,\n          Grid,\n          List,\n          ListItem,\n          Typography,\n          withStyles,\n        } from '@material-ui/core'\nimport AnnouncementIcon from '@material-ui/icons/Announcement'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\n\n\nconst styles = theme => ({\n  missedBlockAvatar: {\n    backgroundColor: theme.palette.error.main,\n  },\n  successfulBlockAvatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n})\n\nconst CompletedSlot = withStyles(styles)(({ hasMissedBlock, ... rest, }) =>\n  hasMissedBlock\n    ? (<CompletedMissedSlot {... rest} />)\n    : (<CompletedForgedSlot {... rest} />)\n)\n\nconst CompletedForgedSlot = ({ address, classes, name, rank, slot, timestamp, totalForged, vote, }) =>\n  <React.Fragment>\n  <Grid container spacing={16}>\n    <Grid item>\n      <Avatar className={classes.successfulBlockAvatar}>\n        <CheckCircle />\n      </Avatar>\n    </Grid>\n    <Grid item xs={12} sm direction=\"column\" container>\n      <Grid item>\n        <Typography gutterBottom variant=\"subheading\">\n          {`Slot ${slot} - `}\n          <Link to={`delegate/${address}`}>\n            {name}\n          </Link>\n        </Typography>\n      </Grid>\n      <Grid item container>\n        <Grid item xs={3}>\n          <Typography gutterBottom>\n            {`Rank ${rank}`}\n          </Typography>\n          <Typography color=\"textSecondary\">\n            {`Vote: ${vote.toFixed(0)} BPL`}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography gutterBottom>\n            {`Forged ${totalForged.toFixed(4)} BPL`}\n          </Typography>\n          <Typography color=\"textSecondary\">\n            {`Total forged: x BPL`}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Typography>\n            {`${new Date(timestamp).toLocaleString()}`}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n  </Grid>\n  </React.Fragment>\n\nconst CompletedMissedSlot = ({ address, classes, name, rank, slot, timestamp, vote, }) =>\n  <React.Fragment>\n    <Grid container spacing={16}>\n      <Grid item>\n        <Avatar className={classes.missedBlockAvatar}>\n          <AnnouncementIcon />\n        </Avatar>\n      </Grid>\n      <Grid item xs={12} sm direction=\"column\" container>\n        <Grid item>\n          <Typography gutterBottom variant=\"subheading\">\n            {`Slot ${slot} - `}\n            <Link to={`delegate/${address}`}>\n              {name}\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item container>\n          <Grid item xs={3}>\n            <Typography gutterBottom>\n              {`Rank ${rank}`}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {`Vote: ${vote.toFixed(0)} BPL`}\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography gutterBottom>\n              {`Missed block`}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {`Total forged: x BPL`}\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n            <Typography>\n              {`${new Date(timestamp).toLocaleString()}`}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  </React.Fragment>\n\nconst CollapsableSlot = inject('slotStore')(observer(({ slotStore, }) =>\n  <Collapse \n    component={ListItem}\n    in={slotStore.slotInProcess.shouldBeVisible}\n    key={slotStore.slotInProcess.slot.slot}\n    onEntered={() => slotStore.slotJoinedCompleted()}\n  >\n    <CompletedSlot {... slotStore.slotInProcess.slot} />\n  </Collapse>\n))\n\n\nclass CompletedSlots extends Component {\n  render() {\n    const { slotStore } = this.props\n    const Incoming = slotStore.hasSlotInProcess && slotStore.slotInProcess.hasLeftUpcoming\n      ? <CollapsableSlot slot={slotStore.slotInProcess.slot} store={slotStore} />\n      : null\n\n      console.log(slotStore.completedSlots[0])\n    return (\n      <React.Fragment>\n        {slotStore.init.match({\n          pending: () => <div>Loading, please wait..</div>,\n          rejected: (err) => <div>Error: {err.message}</div>,\n          resolved: () => (\n            <List>\n              {Incoming}\n              {slotStore.completedSlots.map(forger =>\n                <ListItem key={forger.slot}>\n                  <CompletedSlot {... forger} />\n                </ListItem>\n              )}\n            </List>\n          )\n        })} \n      </React.Fragment>\n    )\n  }\n}\n\nexport default inject('slotStore')(observer(CompletedSlots))\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Card, CardContent, Typography, } from '@material-ui/core'\n\n\nclass RoundProgress extends Component {\n  render() {\n    const { slotStore, } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"headline\">\n            Round Progress\n          </Typography>\n          <Typography variant=\"subheading\">\n            Remaining Slots: {slotStore.remainingSlotCount}\n          </Typography>\n          <Typography variant=\"subheading\">\n            Successful Forges: {slotStore.successfulForgeCount}\n          </Typography>\n          <Typography variant=\"subheading\">\n            Missed Blocks: {slotStore.missedBlockCount}\n          </Typography>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('slotStore')(observer(RoundProgress))\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Grid, Typography, } from '@material-ui/core'\n\nimport CompletedSlots from './CompletedSlots'\nimport RoundProgress from './RoundProgress'\nimport RoundStats from './RoundStats'\nimport UpcomingSlots from './UpcomingSlots'\n\nclass RoundScreen extends Component {\n  render() {\n    const { roundStore, slotStore, } = this.props\n    const MiddleColumn = slotStore.hasCompletedSlotsForRound\n      ? <RoundStats />        \n      : <React.Fragment>\n          <Typography variant=\"headline\">\n            Upcoming Forgers\n          </Typography>\n          <UpcomingSlots />\n        </React.Fragment>\n\n    return (\n      <Grid container>\n        <Grid item xs={6}>\n          <Typography variant=\"headline\">\n            Forging Round \n            {roundStore.hasNewRound ? ` ${roundStore.newRound.roundNumber}` : null}\n            {slotStore.hasCompletedSlotsForRound ? ' - Complete' : ' - In process'}\n          </Typography>\n          <CompletedSlots />\n        </Grid>\n        <Grid item xs={3}>\n          {MiddleColumn}\n        </Grid>\n        <Grid item xs={3}>\n          <RoundProgress />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default inject('roundStore', 'slotStore')(observer(RoundScreen))\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Card, CardContent, Typography, } from '@material-ui/core'\n\n\nclass RoundStats extends Component {\n  render() {\n    const { slotStore, } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"headline\">\n            Round Stats\n          </Typography>\n          <Typography variant=\"subheading\">\n            Total forged this round: {slotStore.totalForgedAmount}\n          </Typography>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('slotStore')(observer(RoundStats))\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Link } from 'react-router-dom'\nimport { \n  Avatar,\n  Collapse,\n  Grid,\n  List,\n  ListItem,\n  Typography,\n} from '@material-ui/core'\nimport UpdateIcon from '@material-ui/icons/Update'\n\nimport { toHowLong } from '../domain/util/format'\n\n\nconst UpcomingSlot = ({ address, slot, name, rank, timestamp, vote, }) =>\n  <React.Fragment>\n    <Grid container spacing={16}>\n      <Grid item>\n        <Avatar>\n          <UpdateIcon />\n        </Avatar>\n      </Grid>\n      <Grid item xs={12} sm direction=\"column\" container>\n        <Grid item>\n          <Typography gutterBottom variant=\"subheading\">\n            {`Slot ${slot} - `}\n            <Link to={`delegate/${address}`}>\n              {name}\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item container>\n          <Grid item xs={6}>\n            <Typography gutterBottom>\n              {`Rank ${rank}`}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {`Vote: ${vote.toFixed(0)} BPL`}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>\n              {`${toHowLong(timestamp)}`}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  </React.Fragment>\n\nconst CollapsableSlot = inject('slotStore')(observer(({ slotStore, }) =>\n  <Collapse \n    component={ListItem}\n    in={slotStore.slotInProcess.shouldBeVisible}\n    key={slotStore.slotInProcess.slot.slot}\n    onExited={() => slotStore.slotLeftUpcoming()}\n  >\n    <UpcomingSlot {... slotStore.slotInProcess.slot} />\n  </Collapse>\n))\n\n\nclass UpcomingSlots extends Component {\n  render() {\n    const { slotStore } = this.props\n    const Outgoing = slotStore.hasSlotInProcess && !slotStore.slotInProcess.hasLeftUpcoming\n      ? <CollapsableSlot slot={slotStore.slotInProcess.slot} store={slotStore} />\n      : null\n\n    return (\n      <React.Fragment>\n        {slotStore.init.match({\n          pending: () => <div>Loading, please wait..</div>,\n          rejected: (err) => <div>Error: {err.message}</div>,\n          resolved: () => (\n            <List>\n              {Outgoing}\n              {slotStore.upcomingSlots.concat(slotStore.unprocessedSlots).map(forger =>\n                <ListItem key={forger.slot}>\n                  <UpcomingSlot {... forger} />\n                </ListItem>\n              )}\n            </List>\n          )\n        })} \n      </React.Fragment>\n    )\n  }\n}\n\nexport default inject('slotStore')(observer(UpcomingSlots))\n","import fetch from 'node-fetch'\nimport qs from 'querystring'\n\nconst api = 'https://api.bplforge.com/api'\n\nasync function makeApiRequest(url, params) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const query = params ? `?${qs.stringify(params)}` : ''\n      const requestUrl = `${api}/${url}${query}`\n\n      const rawResponse = await fetch(requestUrl, {\n        method: 'GET',\n      })\n      const response = await rawResponse.json()\n\n      if (response.success) {\n        resolve(response)\n      } else {\n        console.log(response)\n        reject(new Error(`Request did not complete successfully.`))\n      }\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\nexport default class NodeApi {\n  async getActiveDelegates() {\n    return makeApiRequest('delegates', 0, 201)\n    /*\n    return {\n      delegates: [\n        { publicKey: 1, blockRoundSlot: 1, username: 'Delegate 1', },\n        { publicKey: 2, blockRoundSlot: 2, username: 'Delegate 2', },\n        { publicKey: 3, blockRoundSlot: 3, username: 'Delegate 3', },\n        { publicKey: 4, blockRoundSlot: 4, username: 'Delegate 4', },\n        { publicKey: 5, blockRoundSlot: 5, username: 'Delegate 5', },\n      ]\n    }\n    */\n  }\n\n  async getBlocks(offset = 0, limit = 100) {\n    return makeApiRequest('blocks', { limit, offset })\n  }\n\n  async getCurrentRound() {\n    return makeApiRequest('rounds')\n    /*\n    return {\n      delegateActivity: [\n        { publicKey: 1, hasMissedBlock: false, roundSlot: 1, totalForged: '12345668.823422', },\n        { publicKey: 2, hasMissedBlock: true, roundSlot: 2, totalForged: '23424.823422', },\n        { publicKey: 3, hasMissedBlock: false, roundSlot: 3, totalForged: '23893054.823422', },\n      ],\n      expectedForgers: [\n        { publicKey: 4, blockRoundSlot: 4, username: 'Delegate 4', },\n        { publicKey: 5, blockRoundSlot: 5, username: 'Delegate 5', },\n      ],\n    }\n    */\n  }\n\n  async getRewardBlocks(generatorPublicKey) {\n    return makeApiRequest('blocks', { generatorPublicKey })\n  }\n\n  async getTransactions(address) {\n    return makeApiRequest('transactions', {\n      senderId: address,\n      recipientId: address,\n    })\n  }\n\n  async getVoters(publicKey) {\n    return makeApiRequest('delegates/voters', { publicKey })\n  }\n}\n","import Big from 'big-js'\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.locale(en)\n\n// Create relative date/time formatter.\nconst timeAgo = new TimeAgo('en-US')\n\nexport function fromApiString(bplString) {\n  return Big(bplString).div('100000000')\n}\n\nexport function toHowLong(timestamp) {\n  return timeAgo.format(timestamp)\n}\n","\nexport function log() {\n  console.log.apply(console, Array.prototype.slice.call(arguments, 0))\n}\n","\nexport const byAscending = prop => (a, b) => a[prop] > b[prop] ? 1 : b[prop] > a[prop] ? -1 : 0\n\nexport const byDescending = prop => (a, b) => a[prop] > b[prop] ? -11 : b[prop] > a[prop] ? 1 : 0\n","const blockInterval = 15 * 1000\nconst epochTimeUtc = Date.UTC(2017, 2, 21, 13, 0, 0, 0)\nconst epochSeconds = Math.floor(epochTimeUtc / 1000)\n\n\nexport const currentMsTimestamp = () =>\n  Date.now()\n\nexport const fromApiToMs = apiTimestamp =>\n  (apiTimestamp + epochSeconds) * 1000\n\nexport function getApiTimestamp() {\n  const currentSeconds = Math.floor(currentMsTimestamp() / 1000)\n\n  return currentSeconds - epochSeconds\n}\n\nexport const nextMsTimestamp = msTimestamp =>\n  msTimestamp + blockInterval\n\nexport function getTimestamp(apiTimestamp) {\n  return (apiTimestamp + epochSeconds) * 1000\n}\n","import { action,\n         computed, \n         decorate,\n         observable,\n         onBecomeObserved,\n         onBecomeUnobserved,\n         when,\n       } from 'mobx'\n\nimport { log } from '../domain/util/logger'\nimport { byAscending } from '../domain/util/sorters'\n\nconst blockInterval = 15 * 1000\n\n\nexport default class BlockStore {\n  blockListener\n  lastProcessedBlockHeight\n  unprocessedBlocks = new Map()\n\n  constructor(nodeApi, roundStore) {\n    this.nodeApi = nodeApi\n    this.roundStore = roundStore\n\n    when(() => this.roundStore.hasNewRound, () => this.init())\n\n    onBecomeObserved(this, 'hasNextBlock', this.resume)\n    onBecomeUnobserved(this, 'hasNextBlock', this.suspend)\n  }\n\n  init() {\n    log('Initializing Block Store.')\n    this.lastProcessedBlockHeight = this.roundStore.initialBlockHeight\n    log(`Block store will load blocks after height ${this.lastProcessedBlockHeight}`)\n  }\n\n  resume = () => {\n    log('Resuming block listener.')\n    this.blockListener = setInterval(() => this.listenForNewBlocks(), blockInterval)\n  }\n\n  async listenForNewBlocks() {\n    let offset = 0\n    let hasLoadedNewBlocks = true\n    while (!this.hasNextBlock && hasLoadedNewBlocks) {\n      let blocks = await this.nodeApi.getBlocks(offset, 10)\n      let newBlocks = blocks.blocks.filter(b => b.height > this.lastProcessedBlockHeight)\n      \n      if (newBlocks.length > 0) {\n        newBlocks.forEach(b => this.unprocessedBlocks.set(b.height, b))\n        log(`There are ${newBlocks.length} new blocks awaiting processing out of ${this.unprocessedBlocks.size} total.`)\n        offset += 10\n      } else {\n        log(`No new blocks loaded.`)\n        hasLoadedNewBlocks = false\n      }\n    }\n  }\n\n  suspend = () => {\n    log('Suspending block listener.')\n    clearInterval(this.blockListener)\n  }\n\n  get hasNextBlock() {\n    return this.unprocessedBlocks.has(this.nextBlockHeight)\n  }\n\n  nextBlock() {\n    const next = this.unprocessedBlocks.get(this.nextBlockHeight)\n    this.lastProcessedBlockHeight = this.nextBlockHeight\n    log(`Processing block height ${this.lastProcessedBlockHeight}`)\n    return next\n  }\n  \n  get nextBlockHeight() {\n    return this.lastProcessedBlockHeight + 1\n  }\n}\n\ndecorate(BlockStore, {\n  hasNextBlock: computed,\n  lastProcessedBlockHeight: observable,\n  listenForNewBlocks: action,\n  nextBlock: action,\n  nextBlockHeight: computed,\n  unprocessedBlocks: observable,\n})\n","import { computed, decorate, observable, when, } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { log } from '../domain/util/logger'\n\n\nexport default class DelegateStore {\n  activeAddress = null\n  addressToPublicKey = new Map()\n  delegates = new Map()\n  isInitialized = false\n\n  constructor(nodeApi) {\n    this.nodeApi = nodeApi\n  }\n\n  async init() {\n    log('Initializing Delegate Store.')\n    const delegates = await this.nodeApi.getActiveDelegates()\n    delegates.delegates.forEach(d => {\n      this.delegates.set(d.publicKey, d)\n      this.addressToPublicKey.set(d.address, d.publicKey)\n    })\n\n    this.isInitialized = true\n  }\n\n  get activeDelegate() {\n    return this.delegates.get(this.addressToPublicKey.get(this.activeAddress))\n  }\n\n  get(publicKey) {\n    return this.delegates.get(publicKey)\n  }\n\n  get hasLoadedDelegates() {\n    return this.delegates.size > 0\n  }\n\n  async setActiveDelegate(address) {\n    await when(() => this.isInitialized)\n    \n    console.log(`Setting active address: ${address}`)\n    this.activeAddress = address\n  }\n}\n\n//     const voters = await this.nodeApi.getVoters(this.selectedDelegate.publicKey)\n\ndecorate(DelegateStore, {\n  activeAddress: observable,\n  activeDelegate: computed,\n  delegates: observable,\n  hasLoadedDelegates: computed,\n  isInitialized: observable,\n  setActiveDelegate: task,\n})\n","import { action,\n         computed, \n         decorate,\n         observable,\n       } from 'mobx'\n\nimport { log } from '../domain/util/logger'\n\n\nexport default class RoundStore {\n  constructor(nodeApi) {\n    this.nodeApi = nodeApi\n  }\n\n  newRound = null\n\n  get hasNewRound() {\n    return this.newRound !== null\n  }\n\n  async init() {\n    log(`Loading initial current round.`)\n    const currentRound = await this.nodeApi.getCurrentRound()\n    log(`Initial current round loaded.`, currentRound)\n\n    this.newRound = currentRound\n  }\n\n  get initialBlockHeight() {\n    return this.hasNewRound\n      ? this.newRound.delegateActivity.reduce((initialHeight, slot) => {\n            const slotValue = slot.hasMissedBlock ? 0 : 1\n            return initialHeight + slotValue\n          },\n          this.newRound.fromBlock - 1\n        ) \n      : 0\n  }\n}\n\ndecorate(RoundStore, {\n  hasNewRound: computed,\n  init: action,\n  initialBlockHeight: computed,\n  newRound: observable,\n})\n","import Big from 'big-js'\nimport { action,\n         computed, \n         decorate,\n         observable,\n         runInAction,\n         when,\n       } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { log } from '../domain/util/logger'\nimport getSlotsFromInitialData, { createSlotFromBlock, basicSlot } from './slotFactory'\nimport { nextMsTimestamp } from '../domain/util/time';\n\n\nexport default class SlotStore {\n  completedSlots = []\n  hasCompletedSlotsForRound = false\n  isAwaitingBlock = true\n  isAwaitingSlot = true\n  roundSlots = new Map()\n  slotInProcess = null\n  upcomingSlots = []\n  unprocessedSlots = []\n\n  constructor(blockStore, delegateStore, roundStore) {\n    this.blockStore = blockStore\n    this.delegateStore = delegateStore\n    this.roundStore = roundStore\n  }\n\n  async init() {\n    log('Initializing Slot Store.')\n    await when(() => this.roundStore.hasNewRound && this.delegateStore.hasLoadedDelegates)\n\n    const result = getSlotsFromInitialData(this.roundStore.newRound, this.delegateStore)    \n    this.watchForNextBlock()\n    this.watchForUnprocessedSlot()\n\n    runInAction(() => {\n      this.completedSlots.replace(result.completed)\n      this.upcomingSlots.replace(result.upcoming)\n\n      this.completedSlots.forEach(s => this.roundSlots.set(s.slot, s))\n      this.upcomingSlots.forEach(s => this.roundSlots.set(s.slot, s))\n    }) \n  }\n\n  watchForNextBlock() {\n    when(() => this.blockStore.hasNextBlock && this.isAwaitingBlock, () => this.processReceivedBlock())\n  }\n\n  getRoundSlot(totalSlot) {\n    // From BPL-node code\n    return this.roundSlots.get(totalSlot % 201)\n  }\n\n  processReceivedBlock() {\n    this.isAwaitingBlock = false\n    this.watchForNextBlock()\n\n    const nextBlock = this.blockStore.nextBlock()\n    log('Processing next block.', nextBlock)\n\n    const blockSlots = this.upcomingSlots.reduce((all, slot) => {\n      if (all.hasFoundProcessedSlot) {\n        all.upcomingSlots.push(slot)\n      } else {\n        const completedSlot = createSlotFromBlock(slot, all.block)\n        all.hasFoundProcessedSlot = !completedSlot.hasMissedBlock\n        all.unprocessedSlots.push(completedSlot)\n\n        if (completedSlot.hasMissedBlock) {\n          all.totalSlotCount += 1\n          let roundSlot = this.getRoundSlot(all.totalSlotCount)\n          let matchingDelegate = this.delegateStore.get(roundSlot.publicKey)\n          let lastSlot = this.upcomingSlots[this.upcomingSlots.length - 1]\n          all.additionalSlots.push(basicSlot(all.totalSlotCount, matchingDelegate, nextMsTimestamp(lastSlot.timestamp)))\n        }\n      }\n      return all\n    }, {\n      additionalSlots: [],\n      block: nextBlock,\n      hasFoundProcessedSlot: false,\n      totalSlotCount: this.completedSlots.length + this.upcomingSlots.length,\n      unprocessedSlots: [],\n      upcomingSlots: [],\n    })\n\n    this.unprocessedSlots.replace(this.unprocessedSlots.concat(blockSlots.unprocessedSlots))\n    this.upcomingSlots.replace(blockSlots.upcomingSlots.concat(blockSlots.additionalSlots))\n\n    this.hasCompletedSlotsForRound = this.unprocessedSlots.length === 0 && this.upcomingSlots.length === 0\n  }\n\n  watchForUnprocessedSlot() {\n    when(() => this.isAwaitingSlot && this.hasUnprocessedSlots, () => this.processNextSlot())\n  }\n  \n  get hasUnprocessedSlots() {\n    return this.unprocessedSlots.length > 0\n  }\n\n  nextUnprocessedSlot() {\n    return this.unprocessedSlots.shift()\n  }\n\n  processNextSlot() {\n    this.isAwaitingSlot = false\n    this.watchForUnprocessedSlot()\n\n    const nextSlot = this.nextUnprocessedSlot()\n    log('Processing next slot.', nextSlot)\n\n    this.slotInProcess = {\n      hasLeftUpcoming: false,\n      shouldBeVisible: true,\n      slot: nextSlot,\n    }\n\n    setTimeout(() => this.slotInProcess.shouldBeVisible = false, 0)\n  }\n\n  get hasSlotInProcess() {\n    return this.slotInProcess !== null\n  }\n\n  get missedBlockCount() {\n    return this.completedSlots.filter(s => s.hasMissedBlock).length\n  }\n\n  get remainingSlotCount() {\n    return this.unprocessedSlots.length + this.upcomingSlots.length\n  }\n\n  get successfulForgeCount() {\n    return this.completedSlots.filter(s => !s.hasMissedBlock).length\n  }\n  \n  get totalForgedAmount() {\n    return this.completedSlots\n      .filter(s => !s.hasMissedBlock)\n      .reduce((sum, slot) => sum.plus(slot.totalForged), Big(0))\n  }\n\n  slotJoinedCompleted() {\n    this.isAwaitingSlot = true\n    this.completedSlots.unshift(this.slotInProcess.slot)\n    this.slotInProcess = null\n\n    if (!this.hasUnprocessedSlots) {\n      this.isAwaitingBlock = true\n    }\n  }\n\n  slotLeftUpcoming() {\n    this.slotInProcess.hasLeftUpcoming = true\n\n    setTimeout(() => this.slotInProcess.shouldBeVisible = true, 0)\n  }\n}\n\ndecorate(SlotStore, {\n  completedSlots: observable,\n  hasCompletedSlotsForRound: observable,\n  hasSlotInProcess: computed,\n  hasUnprocessedSlots: computed,\n  init: task,\n  isAwaitingBlock: observable,\n  isAwaitingSlot: observable,\n  missedBlockCount: computed,\n  nextUnprocessedSlot: action,\n  processReceivedBlock: action,\n  processNextSlot: action,\n  remainingSlotCount: computed,\n  slotInProcess: observable,\n  slotJoinedCompleted: action,\n  slotLeftUpcoming: action,\n  successfulForgeCount: computed,\n  totalForgedAmount: computed,\n  upcomingSlots: observable,\n  unprocessedSlots: observable,\n})\n","import { fromApiString } from '../domain/util/format'\nimport { byDescending } from '../domain/util/sorters'\nimport { currentMsTimestamp, fromApiToMs, nextMsTimestamp } from '../domain/util/time'\n\nexport function createSlotFromBlock(slot, block) {\n  let hasMissedBlock = slot.publicKey !== block.generatorPublicKey\n  let blockProps = hasMissedBlock ? {} : {\n    totalForged: fromApiString(block.totalForged),\n  }\n  return {\n    ... slot,\n    hasMissedBlock,\n    ... blockProps,\n  }\n}\n\nexport function completedSlotFromDelegate(slot, delegate, timestamp) {\n  const blockProps = slot.hasMissedBlock ? {} : {\n    totalForged: fromApiString(slot.totalForged),\n  }\n  return {\n    ... basicSlot(slot.roundSlot, delegate, timestamp),\n    hasMissedBlock: slot.hasMissedBlock,\n    ... blockProps,\n  }\n}\n\nexport function basicSlot(number, delegate, timestamp) {\n  return {\n    address: delegate.address,\n    name: delegate.username,\n    number,\n    publicKey: delegate.publicKey,\n    rank: delegate.rate,\n    slot: number,\n    timestamp,\n    vote: fromApiString(delegate.vote),\n  }\n}\n\nexport default function getSlotsFromInitialData(currentRound, delegates) {\n  let result = {\n    completed: [],\n    lastTimestamp: currentMsTimestamp(),\n    upcoming: [],\n  }\n\n  result = currentRound.delegateActivity.reduce((all, slot) => {\n    all.lastTimestamp = slot.hasMissedBlock\n      ? nextMsTimestamp(all.lastTimestamp)\n      : fromApiToMs(slot.timestamp)\n    all.completed.push(completedSlotFromDelegate(slot, delegates.get(slot.publicKey), all.lastTimestamp))\n    return all\n  }, result)\n\n  result = currentRound.expectedForgers.reduce((all, slot) => {\n    all.lastTimestamp = nextMsTimestamp(all.lastTimestamp)\n    all.upcoming.push(basicSlot(slot.blockRoundSlot, delegates.get(slot.publicKey), all.lastTimestamp))\n    return all\n  }, result)\n\n  result.completed.sort(byDescending('slot'))\n\n  return result\n}\n","module.exports = require(\"@babel/polyfill\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/colors/green\");","module.exports = require(\"@material-ui/core/colors/red\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/Announcement\");","module.exports = require(\"@material-ui/icons/CheckCircle\");","module.exports = require(\"@material-ui/icons/Update\");","module.exports = require(\"big-js\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"javascript-time-ago\");","module.exports = require(\"javascript-time-ago/locale/en\");","module.exports = require(\"mobx\");","module.exports = require(\"mobx-react\");","module.exports = require(\"mobx-task\");","module.exports = require(\"node-fetch\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"react\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-jss/lib/JssProvider\");","module.exports = require(\"react-jss/lib/jss\");","module.exports = require(\"react-router-dom\");"],"sourceRoot":""}