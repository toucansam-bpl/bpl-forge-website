{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./public/img/bpl-logo.png","webpack:///./src/server/api.js","webpack:///./src/server/background/networkInfo.js","webpack:///./src/server/middleware/renderer.js","webpack:///./src/server/server.js","webpack:///./src/shared/App.js","webpack:///./src/shared/AppToolbar.js","webpack:///./src/shared/DelegateScreen/DelegateActivity.js","webpack:///./src/shared/DelegateScreen/DelegateInfo.js","webpack:///./src/shared/DelegateScreen/DelegateScreen.js","webpack:///./src/shared/RoundScreen/NetworkStatus.js","webpack:///./src/shared/RoundScreen/RoundProgress.js","webpack:///./src/shared/RoundScreen/RoundScreen.js","webpack:///./src/shared/RoundScreen/RoundSlots.js","webpack:///./src/shared/RoundScreen/RoundStatus.js","webpack:///./src/shared/domain/api/NodeApi.js","webpack:///./src/shared/domain/api/makeApiRequest.js","webpack:///./src/shared/domain/util/delegates.js","webpack:///./src/shared/domain/util/format.js","webpack:///./src/shared/domain/util/logger.js","webpack:///./src/shared/domain/util/rounds.js","webpack:///./src/shared/domain/util/sorters.js","webpack:///./src/shared/domain/util/time.js","webpack:///./src/shared/stores/DelegateStore.js","webpack:///./src/shared/stores/NetworkStore.js","webpack:///./src/shared/stores/PriceStore.js","webpack:///./src/shared/stores/RoundStore.js","webpack:///./src/shared/stores/SlotStore.js","webpack:///./src/shared/stores/slotFactory.js","webpack:///external \"@babel/polyfill\"","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/colors/green\"","webpack:///external \"@material-ui/core/colors/grey\"","webpack:///external \"@material-ui/core/colors/red\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/Announcement\"","webpack:///external \"@material-ui/icons/CheckCircle\"","webpack:///external \"@material-ui/icons/Update\"","webpack:///external \"big-js\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"javascript-time-ago\"","webpack:///external \"javascript-time-ago/locale/en\"","webpack:///external \"mobx\"","webpack:///external \"mobx-react\"","webpack:///external \"mobx-task\"","webpack:///external \"node-fetch\"","webpack:///external \"path\"","webpack:///external \"querystring\"","webpack:///external \"react\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-jss/lib/JssProvider\"","webpack:///external \"react-jss/lib/jss\"","webpack:///external \"react-router-dom\""],"names":["app","get","req","res","next","status","json","networkStatus","seedNodes","getNetworkStatus","Promise","resolve","reject","loadNetworkStatus","seedNodeStatus","i","length","server","getSyncStatus","push","height","refreshNetworkStatus","setInterval","renderFullPage","html","css","filePath","__dirname","err","page","replace","sheetsRegistry","SheetsRegistry","console","log","url","theme","palette","primary","grey","accent","red","type","generateClassName","nodeApi","NodeApi","priceStore","PriceStore","delegateStore","DelegateStore","networkStore","NetworkStore","roundStore","RoundStore","slotStore","SlotStore","stores","Map","toString","runner","pageHtml","send","end","use","api","renderer","express","static","listen","styles","content","marginTop","padding","minHeight","App","classes","props","RoundScreen","DelegateScreen","Component","flex","formControl","margin","spacing","unit","minWidth","headerLink","color","textDecoration","AppToolbar","evt","target","value","setApiServer","logo","verticalAlign","marginLeft","apiServer","name","handleServerChange","apiServers","map","DelegateActivity","activeDelegate","rewardBlockPagination","items","b","id","timestamp","reward","totalFee","totalForged","totalCount","pageSize","pageNumber","DelegateInfo","vote","voters","v","address","username","balance","match","setActiveDelegate","params","pending","rejected","message","resolved","NetworkStatus","networkHeight","seedStatus","ok","total","n","RoundProgress","init","remainingSlotCount","successfulForgeCount","missedBlockCount","missedBlockAvatar","backgroundColor","error","main","successfulBlockAvatar","green","Slot","key","hasBeenCompleted","hasMissedBlock","rest","diff","className","component","AnnouncementIcon","Forged","CheckCircle","toFixed","UpdateIcon","slot","rank","Number","toLocaleString","Date","RoundSlots","slots","forger","currentHeight","startHeight","endHeight","getUrl","offset","limit","blockResponse","blocks","round","getBlocks","lastBlockResponse","generatorPublicKey","senderId","recipientId","path","publicKey","host","makeApiRequest","query","qs","stringify","requestUrl","method","rawResponse","response","hasOwnProperty","success","Error","delegateCount","TimeAgo","locale","en","timeAgo","fromApiString","bplString","div","big","digits","toFixedLocale","toHowLong","format","apply","Array","prototype","slice","call","arguments","getFirstBlockHeightOfRound","roundNumber","getLastBlockHeightOfRound","getRoundNumberFromHeight","Math","floor","byAscending","prop","a","byDescending","blockInterval","blockIntervalInMs","epochTimeUtc","UTC","epochSeconds","currentMsTimestamp","now","fromApiToMs","apiTimestamp","getApiTimestamp","currentSeconds","nextMsTimestamp","msTimestamp","getTimestamp","Paginator","allItems","pageStartIndex","pageEndIndex","observable","computed","addressToPublicKey","delegates","isInitialized","getActiveDelegates","forEach","d","set","delegate","getRewardBlocks","rewardBlocks","getVoters","transformedBlocks","totalAmount","count","accounts","size","hasLoadedDelegates","task","hasChangedServer","serverName","selectedServer","filter","s","reduce","maxHeight","node","action","priceInterval","priceUrl","currency","listener","prices","USD","EUR","resume","fetchPrice","suspend","clearInterval","priceResponse","priceResult","price","activeDelegates","addressToKeys","isReady","roundBlocks","getCurrentRound","currentRound","fromBlockHeight","block","lastBlock","newBlocks","reverse","newBlock","sleep","duration","setTimeout","completedSlots","roundSlots","upcomingSlots","getLastBlockOfRound","lastBlockOfLastRound","lastProcessedTimestamp","slotNumber","processedSlots","all","processReceivedBlock","completed","upcoming","lastProcessedHeight","processNextBlocks","blockTimestamp","totalSlot","hasFoundForger","shift","completedSlot","totalSlotCount","roundSlot","getRoundSlot","matchingDelegate","lastSlot","concat","sum","plus","totalForgedAmount","createSlotFromBlock","blockProps","completedSlotFromDelegate","basicSlot","number","rate","getSlotsFromActiveDelegates","values","getSlotsFromInitialData","forgingInfo","blockInfo","blocksToProcess","result","hasProcessedAllSlots","lastProcessedRoundSlot","lastProcessedGlobalSlot","firstSlot","lastTimestamp","endOfLastRoundTimestamp","remainingBlockCount","forgers","globalSlot","currentSlot","slotTimestamp"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = __webpack_public_path__ + \"static/media/bpl-logo.8b1be392.png\";","import express from 'express'\n\nimport getStatus from './background/networkInfo'\n\n\nconst app = express()\n\napp.get('/networkStatus', async (req, res, next) => {\n  try {\n    const status = await getStatus()\n    res.json(status)\n  } catch (ex) {\n    next(ex)\n  }\n})\n\nexport default app\n","import { getUrl, makeApiRequest } from '../../shared/domain/api/makeApiRequest'\n\n\nlet networkStatus = null\nconst seedNodes = [\n  'http://s01.mc.blockpool.io:9030'\n, 'http://s02.mc.blockpool.io:9030'\n, 'http://s03.mc.blockpool.io:9030'\n, 'http://s04.mc.blockpool.io:9030'\n, 'http://s05.mc.blockpool.io:9030'\n, 'http://s06.mc.blockpool.io:9030'\n, 'http://s07.mc.blockpool.io:9030'\n, 'http://s08.mc.blockpool.io:9030'\n, 'http://s09.mc.blockpool.io:9030'\n, 'http://s10.mc.blockpool.io:9030'\n]\n\nexport default function getNetworkStatus() {\n  return new Promise(async (resolve, reject) => {\n    try {\n      if (networkStatus === null) {\n        networkStatus = await loadNetworkStatus()\n      }\n      resolve(networkStatus)\n    } catch (ex) {\n      reject(ex)\n    }\n  })\n}\n\nasync function loadNetworkStatus() {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const seedNodeStatus = []\n      for (let i = 0; i < seedNodes.length; i += 1) {\n        let server = seedNodes[i]\n        let status = await getSyncStatus(server)\n        seedNodeStatus.push({\n          server,\n          height: status.height,\n        })\n      }\n      resolve({\n        seedNodes: seedNodeStatus,\n      })\n    } catch (ex) {\n      reject(ex)\n    }\n  })\n}\n\nasync function getSyncStatus(server) {\n  return makeApiRequest(getUrl(server, 'loader/status/sync'))\n}\n\nasync function refreshNetworkStatus() {\n  networkStatus = await loadNetworkStatus()\n}\n\nrefreshNetworkStatus()\nsetInterval(() => refreshNetworkStatus(), 30000)\n","import React from 'react'\nimport { readFile } from 'fs'\nimport { resolve as resolvePath } from 'path'\nimport { Provider as MobxProvider } from 'mobx-react'\nimport { renderToString } from 'react-dom/server'\nimport { SheetsRegistry } from 'react-jss/lib/jss'\nimport JssProvider from 'react-jss/lib/JssProvider'\nimport { StaticRouter } from 'react-router-dom'\nimport { MuiThemeProvider, createMuiTheme, createGenerateClassName, } from '@material-ui/core/styles'\nimport grey from '@material-ui/core/colors/grey'\nimport red from '@material-ui/core/colors/red'\n\nimport App from '../../shared/App'\nimport DelegateStore from '../../shared/stores/DelegateStore'\nimport NodeApi from '../../shared/domain/api/NodeApi'\nimport PriceStore from '../../shared/stores/PriceStore'\nimport RoundStore from '../../shared/stores/RoundStore'\nimport SlotStore from '../../shared/stores/SlotStore'\nimport NetworkStore from '../../shared/stores/NetworkStore';\n\n\nconst renderFullPage = async (html, css) => \n  new Promise((resolve, reject) => {\n    const filePath = resolvePath(__dirname, '..', '..', '..', 'public', 'index.html')\n  \n    readFile(filePath, 'utf8', (err, page) => {\n      if (err) {\n        return reject(err)\n      }\n\n      resolve(page.replace(\n        '<div id=\"root\"></div>',\n        `<div id=\"root\">${html}</div>`\n      ).replace(\n        '<style id=\"jss-server-side\"></style>',\n        `<style id=\"jss-server-side\">${css}</style>`\n      ))\n    })\n  })\n\n\nexport default (req, res) => {\n  // Create a sheetsRegistry instance.\n  const sheetsRegistry = new SheetsRegistry()\n\n  console.log(`Serving ${req.url}`)\n\n  // Create a theme instance.\n  const theme = createMuiTheme({\n    palette: {\n      primary: grey,\n      accent: red,\n      type: 'light',\n    },\n  })\n\n  const generateClassName = createGenerateClassName()\n  const nodeApi = new NodeApi()\n  const priceStore = new PriceStore()\n  const delegateStore = new DelegateStore(nodeApi)\n  const networkStore = new NetworkStore(nodeApi)\n  const roundStore = new RoundStore(nodeApi)\n  const slotStore = new SlotStore(nodeApi, roundStore)\n  \n  const stores = {\n    delegateStore,\n    networkStore,\n    priceStore,\n    roundStore,\n    slotStore,\n  }\n\n  // Render the component to a string.\n  const html = renderToString(\n    <JssProvider registry={sheetsRegistry} generateClassName={generateClassName}>\n      <MuiThemeProvider theme={theme} sheetsManager={new Map()}>\n        <MobxProvider {... stores}>\n          <StaticRouter location={req.url} context={{}}>\n            <App />\n          </StaticRouter>\n        </MobxProvider>\n      </MuiThemeProvider>\n    </JssProvider>\n  )\n\n  // Grab the CSS from our sheetsRegistry.\n  const css = sheetsRegistry.toString()\n\n  const runner = async () => {\n    try {\n      const pageHtml = await renderFullPage(html, css)\n      res.send(pageHtml)\n    } catch (ex) {\n      console.log(`Error in server: ${ex}`)\n      res.status(500).end()\n    }\n  }\n  runner()\n}\n","import express from 'express'\nimport cors from 'cors'\n\nimport api from './api'\nimport renderer from './middleware/renderer'\n\n\nconst app = express()\n\napp.use(cors())\n\napp.use('/api', api)\napp.get('^/$', renderer)\n\napp.use(express.static('public'))\n\napp.get('*', renderer)\n\napp.listen(3000, () => {\n  console.log(`Server is listening on port: 3000`)\n})\n","import React, { Component } from 'react'\nimport {\n  CssBaseline,\n  withStyles,\n} from '@material-ui/core'\nimport { Route, Switch } from 'react-router-dom'\n\nimport AppToolbar from './AppToolbar';\nimport DelegateScreen from './DelegateScreen/DelegateScreen'\nimport RoundScreen from './RoundScreen/RoundScreen'\n\n\nconst styles = theme => ({\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100% - 123px)\"\n  },\n})\n\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppToolbar />\n\n        <div className={classes.content}>\n          <Switch>\n            <Route path=\"/\" exact component={RoundScreen} />\n            <Route path=\"/delegate/:address\" component={DelegateScreen} />\n          </Switch>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Link, } from 'react-router-dom'\nimport {\n  AppBar,\n  FilledInput,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Toolbar,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\n\nimport logo from '../../public/img/bpl-logo.png'\n\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  headerLink: {\n    color: '#fff',\n    textDecoration: 'none',\n  },\n})\n\n\nclass AppToolbar extends Component {\n  handleServerChange(evt) {\n    console.log(evt.target.value)\n    this.props.networkStore.setApiServer(evt.target.value)\n  }\n\n  render() {\n    const { classes, networkStore, } = this.props\n\n    return (\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            className={classes.flex}\n          >\n            <img\n              src={logo}\n              alt=\"BPL logo\"\n              style={{ height: '1.16667em', verticalAlign: 'bottom' }}\n            />\n            <span style={{ marginLeft: '15px' }}>\n              <Link to=\"/\" className={classes.headerLink}>BPL Delegate Explorer</Link>\n            </span>\n          </Typography>\n\n          <form>\n            <FormControl variant=\"filled\" className={classes.formControl}>\n              <InputLabel htmlFor=\"server\">Server</InputLabel>\n              <Select\n                value={networkStore.apiServer.name}\n                onChange={evt => this.handleServerChange(evt)}\n                input={<FilledInput name=\"server\" id=\"server\" />}\n              >\n                {networkStore.apiServers.map(server =>\n                  (<MenuItem key={server.name} value={server.name}>{server.name}</MenuItem>)\n                )}\n              </Select>\n            </FormControl>\n          </form>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nexport default withStyles(styles)(inject('networkStore')(observer(AppToolbar)))\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Grid,\n         Table, TableBody, TableCell, TableFooter, TableHead, TablePagination, TableRow,\n         Typography,\n      } from '@material-ui/core'\n\n\nimport { toFixed } from '../domain/util/format'\n\n\nexport class DelegateActivity extends Component {\n  render() {\n    const { delegateStore } = this.props\n\n    return (\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Height</TableCell>\n                <TableCell>Time</TableCell>\n                <TableCell numeric>Reward</TableCell>\n                <TableCell numeric>Fees</TableCell>\n                <TableCell numeric>Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {delegateStore.activeDelegate.rewardBlockPagination.items.map(b => (\n                <TableRow key={b.id}>\n                  <TableCell>{b.height}</TableCell>\n                  <TableCell>{b.timestamp}</TableCell>\n                  <TableCell numeric>{toFixed(b.reward, 8)}</TableCell>\n                  <TableCell numeric>{toFixed(b.totalFee, 8)}</TableCell>\n                  <TableCell numeric>{toFixed(b.totalForged, 8)}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={5}\n                  count={delegateStore.activeDelegate.rewardBlockPagination.totalCount}\n                  rowsPerPage={delegateStore.activeDelegate.rewardBlockPagination.pageSize}\n                  page={delegateStore.activeDelegate.rewardBlockPagination.pageNumber}\n                  onChangePage={evt => console.log(evt)}\n                  onChangeRowsPerPage={evt => console.log(evt)}\n                  // ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default inject('delegateStore')(observer(DelegateActivity))\n\n/*\n<h5>\n{formatWithoutDigits(fromApiString(delegateStore.activeDelegate.vote))}{' '}\nBPL ({toCurrencyFormat(\n  sds.delegateCurrencyValue,\n  sds.price.currency\n)})\n</h5>\n*/\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Grid, Table, TableBody, TableCell, TableHead, TableRow, Typography, } from '@material-ui/core'\n\n\nimport { toFixedLocale } from '../domain/util/format'\n\n\nexport class DelegateInfo extends Component {\n  render() {\n    const { delegateStore } = this.props\n\n    return (\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <div>\n            <h5>\n              {toFixedLocale(delegateStore.activeDelegate.vote)} BPL\n            </h5>\n          </div>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Voter</TableCell>\n                <TableCell numeric>BPL</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {delegateStore.activeDelegate.voters.map(v => (\n                <TableRow key={v.address}>\n                  <TableCell>{v.username || v.address}</TableCell>\n                  <TableCell numeric>{toFixedLocale(v.balance)}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default inject('delegateStore')(observer(DelegateInfo))\n\n/*\n<h5>\n{formatWithoutDigits(fromApiString(delegateStore.activeDelegate.vote))}{' '}\nBPL ({toCurrencyFormat(\n  sds.delegateCurrencyValue,\n  sds.price.currency\n)})\n</h5>\n*/\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Grid, Typography, } from '@material-ui/core'\n\n\nimport DelegateActivity from './DelegateActivity'\nimport DelegateInfo from './DelegateInfo'\n\n\nexport class DelegateScreen extends Component {\n  async componentDidMount() {\n    const { delegateStore, match } = this.props\n    delegateStore.setActiveDelegate(match.params.address)\n  }\n\n  render() {\n    const { delegateStore } = this.props\n\n    return (\n      <React.Fragment>\n        <Grid container>\n        {delegateStore.setActiveDelegate.match({\n          pending: () => <div>Loading, please wait..</div>,\n          rejected: (err) => <div>Error: {err.message}</div>,\n          resolved: () => (\n            <Grid item>\n              <Typography variant=\"headline\">\n                {`Delegate - ${delegateStore.activeDelegate.username}`}\n              </Typography>\n              <DelegateInfo />\n              <DelegateActivity />\n            </Grid>\n          )\n        })}\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default inject('delegateStore')(observer(DelegateScreen))\n\n/*\n        <Grid container>\n          <ItemGrid xs={12} sm={8}>\n            <RegularCard\n              cardTitle={title}\n              cardSubtitle=\"\"\n              content={\n                selectedDelegateStore.hasSelectedDelegate ? (\n                  <DelegateInfo />\n                ) : (\n                  <div>No delegate</div>\n                )\n              }\n            />\n          </ItemGrid>\n\n          <ItemGrid xs={12} sm={4}>\n            <BplPrice />\n            <EstimatedReward />\n          </ItemGrid>\n        </Grid>\n        <DelegateActivity />\n*/\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Card, CardContent, Grid, Typography, } from '@material-ui/core'\n\n\nclass NetworkStatus extends Component {\n  render() {\n    const { networkStore, } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n          <Grid container direction=\"column\" spacing={8}>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                Network Height: {networkStore.networkHeight}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                Seed Status: {`${networkStore.seedStatus.ok} / ${networkStore.seedStatus.total}`}\n              </Typography>\n\n              <ul>\n                {networkStore.seedNodes.map(n => {\n                  return (\n                    <li key={n.server}>\n                      {`${n.server} - ${n.height}`}\n                    </li>\n                  )\n                })}\n              </ul>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('networkStore')(observer(NetworkStatus))\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Card, CardContent, Grid, Typography, } from '@material-ui/core'\n\n\nclass RoundProgress extends Component {\n  render() {\n    const { slotStore, } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n        {slotStore.init.match({\n          pending: () => <div>Loading, please wait..</div>,\n          rejected: (err) => <div>Error: {err.message}</div>,\n          resolved: () => (\n            <Grid container direction=\"column\" spacing={8}>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Remaining Slots: {slotStore.remainingSlotCount}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Successful Forges: {slotStore.successfulForgeCount}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Missed Blocks: {slotStore.missedBlockCount}\n                </Typography>\n              </Grid>\n            </Grid>\n          )}\n        )}\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('slotStore')(observer(RoundProgress))\n","import React, { Component } from 'react'\nimport { Grid, Typography, } from '@material-ui/core'\n\nimport NetworkStatus from './NetworkStatus'\nimport RoundProgress from './RoundProgress'\nimport RoundSlots from './RoundSlots'\nimport RoundStatus from './RoundStatus';\n\n\nexport default class RoundScreen extends Component {\n  render() {\n    return (\n      <Grid container direction=\"column\" spacing={24}>\n        <Grid item xs={12}>\n          <Typography variant=\"headline\">\n            Current Forging Round \n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={24}>\n            <Grid item xs={3}>\n              <NetworkStatus />\n            </Grid>\n            <Grid item xs={3}>\n              <RoundStatus />\n            </Grid>\n            <Grid item xs={3}>\n              <RoundProgress />\n            </Grid>\n            <Grid item xs={3}>\n              <Typography variant=\"h5\">\n                Rewards\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <RoundSlots />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { \n          Avatar,\n          Card,\n          CardContent,\n          Table,\n          TableBody,\n          TableCell,\n          TableHead,\n          TableRow,\n          withStyles,\n        } from '@material-ui/core'\nimport green from '@material-ui/core/colors/green'\n\nimport AnnouncementIcon from '@material-ui/icons/Announcement'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport UpdateIcon from '@material-ui/icons/Update'\n\nconst styles = theme => ({\n  missedBlockAvatar: {\n    backgroundColor: theme.palette.error.main,\n  },\n  successfulBlockAvatar: {\n    backgroundColor: green[500],\n  },\n})\n\nconst Slot = withStyles(styles)(({ key, hasBeenCompleted, hasMissedBlock, ... rest, }) => {\n  const diff = hasBeenCompleted\n    ? hasMissedBlock\n      ? {\n        className: rest.classes.missedBlockAvatar,\n        component: AnnouncementIcon,\n        Forged: () => <TableCell align=\"center\">{ 'missed' }</TableCell>,\n      } : {\n        className: rest.classes.successfulBlockAvatar,\n        component: CheckCircle,\n        Forged: () => <TableCell align=\"right\">{rest.totalForged.toFixed(4)}</TableCell>,\n      }\n    : {\n      className: '',\n      component: UpdateIcon,\n      Forged: () => <TableCell align=\"center\">{ '--' }</TableCell>,\n    }\n\n  return (\n    <TableRow key={key}>\n      <TableCell>\n        <Avatar className={diff.className}>\n          <diff.component />\n        </Avatar>\n      </TableCell>\n      <TableCell align=\"right\">{rest.slot}</TableCell>\n      <TableCell>{rest.name}</TableCell>\n      <TableCell align=\"right\">{rest.rank}</TableCell>\n      <TableCell align=\"right\">{Number(rest.vote.toFixed(0)).toLocaleString()}</TableCell>\n      <diff.Forged />\n      <TableCell align=\"right\">{new Date(rest.timestamp).toLocaleString()}</TableCell>\n    </TableRow>\n  )\n})\n\n\nclass RoundSlots extends Component {\n  render() {\n    const { slotStore } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n          {slotStore.init.match({\n            pending: () => <div>Loading, please wait..</div>,\n            rejected: (err) => <div>Error: {err.message}</div>,\n            resolved: () => (\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>&nbsp;</TableCell>\n                    <TableCell align=\"right\">Slot</TableCell>\n                    <TableCell>Delegate</TableCell>\n                    <TableCell align=\"right\">Rank</TableCell>\n                    <TableCell align=\"right\">Vote</TableCell>\n                    <TableCell align=\"right\">Forged (BPL)</TableCell>\n                    <TableCell align=\"right\">Date</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {slotStore.slots.map(forger => (\n                    <Slot key={forger.slot} {...forger} />\n                  ))}\n                </TableBody>\n              </Table>\n            )\n          })} \n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('slotStore')(observer(RoundSlots))\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Card, CardContent, Grid, Typography, } from '@material-ui/core'\n\n\nclass RoundProgress extends Component {\n  render() {\n    const { roundStore, } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n        {roundStore.init.match({\n          pending: () => <div>Loading, please wait..</div>,\n          rejected: (err) => <div>Error: {err.message}</div>,\n          resolved: () => (\n            <Grid container direction=\"column\" spacing={8}>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Round Status: In Progress\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Current Height: {roundStore.currentHeight}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Start Height: {roundStore.startHeight}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  End Height: {roundStore.endHeight}\n                </Typography>\n              </Grid>\n            </Grid>\n          )}\n        )}\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('roundStore')(observer(RoundProgress))\n","import { getUrl, makeApiRequest } from './makeApiRequest'\nimport { getLastBlockHeightOfRound } from '../util/rounds'\n\n\nexport default class NodeApi {\n  apiServer = 'https://api.bplforge.com'\n  // apiServer = 'https://explorer.dated.fun/node'\n\n  async getActiveDelegates() {\n    return makeApiRequest(this.getUrl('delegates'), 0, 201)\n  }\n\n  async getBlocks(offset = 0, limit = 100, params) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const blockResponse = await makeApiRequest(this.getUrl('blocks'), { limit, offset, ... params, })\n        resolve(blockResponse.blocks)\n      } catch(ex) {\n        reject(ex)\n      }\n    })\n  }\n\n  async getCurrentRound() {\n    return makeApiRequest(this.getUrl('rounds'))\n  }\n\n  async getLastBlockOfRound(round) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const lastBlockResponse = await this.getBlocks(0, 1, { height: getLastBlockHeightOfRound(round) })\n        resolve(lastBlockResponse[0])\n      } catch(ex) {\n        reject(ex)\n      }\n    })\n  }\n\n  async getRoundForgerData() {\n    return makeApiRequest(this.getUrl('delegates/getNextForgers'), { limit: 201, })\n  }\n\n  async getRewardBlocks(generatorPublicKey) {\n    return makeApiRequest(this.getUrl('blocks'), { generatorPublicKey })\n  }\n\n  async getTransactions(address) {\n    return makeApiRequest(this.getUrl('transactions'), {\n      senderId: address,\n      recipientId: address,\n    })\n  }\n\n  getUrl(path) {\n    return getUrl(this.apiServer, path)\n  }\n\n  async getVoters(publicKey) {\n    return makeApiRequest(this.getUrl('delegates/voters'), { publicKey })\n  }\n\n  setApiServer(server) {\n    this.apiServer = server\n  }\n}\n","import fetch from 'node-fetch'\nimport qs from 'querystring'\n\n\nexport function getUrl(host, path) {\n  return `${host}/api/${path}`\n}\n\nexport async function makeApiRequest(url, params) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const query = params ? `?${qs.stringify(params)}` : ''\n      const requestUrl = `${url}${query}`\n\n      const rawResponse = await fetch(requestUrl, {\n        method: 'GET',\n      })\n      const response = await rawResponse.json()\n\n      if (!response.hasOwnProperty('success') || response.success) {\n        resolve(response)\n      } else {\n        console.log(response)\n        reject(new Error(`Request did not complete successfully.`))\n      }\n    } catch (err) {\n      console.log(`Error from ${url}`)\n      reject(err)\n    }\n  })\n}\n","\nexport const delegateCount = 201\n","import Big from 'big-js'\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.locale(en)\n\n// Create relative date/time formatter.\nconst timeAgo = new TimeAgo('en-US')\n\nexport function fromApiString(bplString) {\n  return Big(bplString).div('100000000')\n}\n\nexport function toFixed(big, digits = 0) {\n  return big.toFixed(digits)\n}\n\nexport function toFixedLocale(big, digits = 0) {\n  return Number(big.toFixed(digits)).toLocaleString()\n}\n\nexport function toHowLong(timestamp) {\n  return timeAgo.format(timestamp)\n}\n","\nexport function log() {\n  console.log.apply(console, Array.prototype.slice.call(arguments, 0))\n}\n","const delegateCount = 201\n\nexport const getFirstBlockHeightOfRound = roundNumber => getLastBlockHeightOfRound(roundNumber - 1) + 1\nexport const getLastBlockHeightOfRound = roundNumber => roundNumber * delegateCount\nexport const getRoundNumberFromHeight = height => Math.floor((height-1) / delegateCount) + 1\n","\nexport const byAscending = prop => (a, b) => a[prop] > b[prop] ? 1 : b[prop] > a[prop] ? -1 : 0\n\nexport const byDescending = prop => (a, b) => a[prop] > b[prop] ? -1 : b[prop] > a[prop] ? 1 : 0\n","export const blockInterval = 15\nexport const blockIntervalInMs = blockInterval * 1000\nconst epochTimeUtc = Date.UTC(2017, 2, 21, 13, 0, 0, 0)\nconst epochSeconds = Math.floor(epochTimeUtc / 1000)\n\n\nexport const currentMsTimestamp = () =>\n  Date.now()\n\nexport const fromApiToMs = apiTimestamp =>\n  (apiTimestamp + epochSeconds) * 1000\n\nexport function getApiTimestamp() {\n  const currentSeconds = Math.floor(currentMsTimestamp() / 1000)\n\n  return currentSeconds - epochSeconds\n}\n\nexport const nextMsTimestamp = msTimestamp =>\n  msTimestamp + blockIntervalInMs\n\nexport function getTimestamp(apiTimestamp) {\n  return (apiTimestamp + epochSeconds) * 1000\n}\n","import { computed, decorate, observable, when, } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { fromApiString } from '../domain/util/format'\n\nclass Paginator {\n  allItems = []\n  pageNumber = 0\n  pageSize = 25\n  totalCount = 0\n\n  constructor(items, totalCount = null) {\n    if (items) {\n      this.allItems.replace(items)\n    }\n\n    this.totalCount = totalCount === null ? items.length : totalCount\n  }\n\n  get items() {\n    const pageStartIndex = this.pageNumber * this.pageSize\n    const pageEndIndex = pageStartIndex + this.pageSize - 1\n    return this.allItems.slice(pageStartIndex, pageEndIndex)\n  }\n}\n\ndecorate(Paginator, {\n  allItems: observable,\n  items: computed,\n  pageNumber: observable,\n  pageSize: observable,\n  totalCount: observable,\n})\n\n\n\nexport default class DelegateStore {\n  activeDelegate = null\n  addressToPublicKey = new Map()\n  delegates = new Map()\n  isInitialized = false\n\n  constructor(nodeApi) {\n    this.nodeApi = nodeApi\n  }\n\n  async init() {\n    console.log('Initializing Delegate Store.')\n    const delegates = await this.nodeApi.getActiveDelegates()\n    delegates.delegates.forEach(d => {\n      this.delegates.set(d.publicKey, d)\n      this.addressToPublicKey.set(d.address, d.publicKey)\n    })\n\n    this.isInitialized = true\n  }\n\n  get(publicKey) {\n    return this.delegates.get(publicKey)\n  }\n\n  get hasLoadedDelegates() {\n    return this.delegates.size > 0\n  }\n\n  async setActiveDelegate(address) {\n    await when(() => this.isInitialized)\n    \n    console.log(`Setting active delegate: ${address}`)\n    const publicKey = this.addressToPublicKey.get(address)\n    const delegate = this.delegates.get(publicKey)\n    const rewardBlocks = await this.nodeApi.getRewardBlocks(publicKey)\n    const voters = await this.nodeApi.getVoters(publicKey)\n    console.log(rewardBlocks)\n    const transformedBlocks = rewardBlocks.blocks.map(b => ({\n      ... b,\n\n      reward: fromApiString(b.reward),\n      totalAmount: fromApiString(b.totalAmount),\n      totalFee: fromApiString(b.totalFee),\n      totalForged: fromApiString(b.totalForged),\n    }))\n\n    this.activeDelegate = {\n      ... delegate,\n\n      rewardBlockPagination: new Paginator(transformedBlocks, rewardBlocks.count),\n      vote: fromApiString(delegate.vote),\n      voters: voters.accounts.map(v => ({\n        ... v,\n\n        balance: fromApiString(v.balance),\n      })),\n    }\n  }\n}\n\n\ndecorate(DelegateStore, {\n  activeDelegate: observable,\n  delegates: observable,\n  hasLoadedDelegates: computed,\n  isInitialized: observable,\n  setActiveDelegate: task,\n})\n","import { action,\n         computed, \n         decorate,\n         observable,\n         runInAction,\n       } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { makeApiRequest } from '../domain/api/makeApiRequest'\n\n\nexport default class NetworkStore {\n  apiServers = [\n    { name: 'https://api.bplforge.com', url: 'https://api.bplforge.com' },\n    { name: 'https://explorer.dated.fun', url: 'https://explorer.dated.fun/node' },\n    { name: 'https://api.blockpool.io', url: 'https://api.blockpool.io' },\n  ]\n  apiServer = this.apiServers[0]\n  hasChangedServer = false\n  seedNodes = []\n\n  constructor(nodeApi) {\n    this.nodeApi = nodeApi\n  }\n\n  async init() {\n    const networkStatus = await makeApiRequest('/api/networkStatus')\n\n    runInAction(() => {\n      this.seedNodes.replace(networkStatus.seedNodes)\n    })\n  }\n\n  get networkHeight() {\n    return this.seedNodes.reduce((maxHeight, node) => node.height > maxHeight ? node.height : maxHeight, 0)\n  }\n\n  get seedStatus() {\n    const height = this.networkHeight\n    return this.seedNodes.reduce((status, node) => {\n      status.total += 1\n      if (height - node.height <= 1) {\n        status.ok += 1\n      }\n      return status\n    }, {\n      ok: 0,\n      total: 0,\n    })\n  }\n\n  setApiServer(serverName) {\n    const selectedServer = this.apiServers.filter(s => s.name === serverName)[0]\n    this.apiServer = selectedServer\n    this.nodeApi.setApiServer(selectedServer.url)\n    this.hasChangedServer = true\n  }\n}\n\ndecorate(NetworkStore, {\n  apiServer: observable,\n  apiServers: observable,\n  hasChangedServer: observable,\n  init: task,\n  networkHeight: computed,\n  seedNodes: observable,\n  seedStatus: computed,\n  setApiServer: action,\n})\n","import fetch from 'node-fetch'\nimport { log } from '../domain/util/logger'\nimport { action,\n  computed, \n  decorate,\n  observable,\n  onBecomeObserved,\n  onBecomeUnobserved,\n} from 'mobx'\n\nconst priceInterval = 5 * 60 * 1000\nconst priceUrl = 'https://min-api.cryptocompare.com/data/price?fsym=BPL&tsyms=BTC,USD,GBP,EUR,CNY,AUD'\n\n\nexport default class PriceStore {\n  currency = 'USD'\n  listener\n  prices = { USD: '', EUR: '', }\n  \n  constructor() {\n    onBecomeObserved(this, 'price', this.resume)\n    onBecomeUnobserved(this, 'price', this.suspend)\n  }\n\n  async fetchPrice() {\n    const priceResponse = await fetch(priceUrl)\n    const priceResult = await priceResponse.json()\n\n    this.prices = priceResult\n    log(this.currency, priceResult)\n  }\n\n  get price() {\n    return this.prices[this.currency]\n  }\n\n  resume = () => {\n    log('Resuming price listener')\n    this.listener = setInterval(() => this.fetchPrice(), priceInterval)\n  }\n\n  suspend = () => {\n    log('Suspening price listener')\n    clearInterval(this.listener)\n  }\n\n  setCurrency(currency) {\n    this.currency = currency\n  }\n}\n\ndecorate(PriceStore, { \n  currency: observable,\n  fetchPrice: action,\n  price: computed,\n  prices: observable,\n})\n","import { action,\n         computed, \n         decorate,\n         observable,\n       } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { log } from '../domain/util/logger'\n\n\nexport default class RoundStore {\n  constructor(nodeApi) {\n    this.nodeApi = nodeApi\n  }\n\n  activeDelegates = new Map()\n  addressToKeys = new Map()\n  endHeight\n  isReady = false\n  round\n  roundBlocks = []\n  startHeight\n\n  async init() {\n    log(`Loading initial current round.`)\n    const currentRound = await this.nodeApi.getCurrentRound()\n    log(`Initial current round loaded.`, currentRound)\n\n    currentRound.activeDelegates.forEach(delegate => {\n      this.activeDelegates.set(delegate.publicKey, delegate)\n      this.addressToKeys.set(delegate.address, delegate.publicKey)\n    })\n    this.endHeight = currentRound.endHeight\n    this.round = currentRound.round\n    this.roundBlocks = currentRound.blocks\n    this.startHeight = currentRound.startHeight\n    \n    this.isReady = true\n  }\n\n  async * blocks(fromBlockHeight) {\n    for (const block of this.roundBlocks.filter(b => b.height >= fromBlockHeight)) {\n      yield block\n    }\n\n    let lastBlock = this.roundBlocks[this.roundBlocks.length - 1]\n    let offset = 0\n    while (lastBlock.height <= this.endHeight) {\n      let blocks = await this.nodeApi.getBlocks(offset, 10)\n      let newBlocks = blocks.filter(b => b.height > lastBlock.height)\n      newBlocks.reverse()\n\n      for (const newBlock of newBlocks) {\n        lastBlock = newBlock\n        this.roundBlocks.push(newBlock)\n        yield newBlock\n      }\n\n      await sleep(15000)\n    }\n  }\n\n  get currentHeight() {\n    return this.roundBlocks[this.roundBlocks.length - 1].height\n  }\n}\n\nfunction sleep(duration) {\n  return new Promise(resolve => setTimeout(() => resolve(0), duration))\n}\n\ndecorate(RoundStore, {\n  activeDelegates: observable,\n  currentHeight: computed,\n  endHeight: observable,\n  init: task,\n  isReady: observable,\n  round: observable,\n  startHeight: observable,\n})\n","import Big from 'big-js'\nimport { action,\n         computed, \n         decorate,\n         observable,\n         runInAction,\n         when,\n       } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { delegateCount } from '../domain/util/delegates'\nimport { log } from '../domain/util/logger'\nimport { createSlotFromBlock, basicSlot, getSlotsFromActiveDelegates } from './slotFactory'\nimport { blockInterval, nextMsTimestamp, fromApiToMs, } from '../domain/util/time'\n\n\nexport default class SlotStore {\n  completedSlots = []\n  roundSlots = new Map()\n  upcomingSlots = []\n\n  constructor(nodeApi, roundStore) {\n    this.nodeApi = nodeApi\n    this.roundStore = roundStore\n\n    when(() => this.roundStore.isReady, () => this.init())\n  }\n\n  async init() {\n    log('Initializing Slot Store.')\n\n    const lastBlockOfLastRound = await this.nodeApi.getLastBlockOfRound(this.roundStore.round - 1)\n\n    log('Generating forging list')\n\n    console.log('last block of last round', lastBlockOfLastRound)\n    const lastProcessedTimestamp = fromApiToMs(lastBlockOfLastRound.timestamp)\n    const slots = getSlotsFromActiveDelegates(this.roundStore.activeDelegates, lastProcessedTimestamp)\n\n    slots.forEach(s => this.roundSlots.set(s.slot, {\n      slotNumber: s.slot,\n      publicKey: s.publicKey,\n    }))\n\n    const processedSlots = this.roundStore.roundBlocks.reduce((all, block) => {\n      const { completed, upcoming } = this.processReceivedBlock(all.completed, all.upcoming, block)\n      all.completed = completed\n      all.lastProcessedHeight = block.height\n      all.upcoming = upcoming\n      return all\n    }, {\n      completed: [],\n      lastProcessedHeight: lastBlockOfLastRound.height,\n      upcoming: slots,\n    })\n    \n    runInAction(() => {\n      this.completedSlots.replace(processedSlots.completed)\n      this.upcomingSlots.replace(processedSlots.upcoming)\n      this.processNextBlocks(processedSlots.lastProcessedHeight)\n    }) \n  }\n\n  getSlotNumber(blockTimestamp) {\n\t\treturn Math.floor(blockTimestamp / blockInterval)\n\t}\n\n  getRoundSlot(totalSlot) {\n    // From BPL-node code\n    return this.roundSlots.get(totalSlot % delegateCount)\n  }\n\n  async processNextBlocks(lastProcessedHeight) {\n    for await (const block of this.roundStore.blocks(lastProcessedHeight + 1)) {\n      let { completed, upcoming } = this.processReceivedBlock(this.completedSlots, this.upcomingSlots, block)\n      runInAction(() => {\n        this.completedSlots.replace(completed)\n        this.upcomingSlots.replace(upcoming)\n      })\n    }\n  }\n\n  processReceivedBlock(completedSlots, upcomingSlots, block) {\n    const completed = completedSlots.slice(0)\n    const upcoming = upcomingSlots.slice(0)\n    let hasFoundForger = false\n\n    while (!hasFoundForger) {\n      let slot = upcoming.shift()\n      let completedSlot = createSlotFromBlock(slot, block)\n      completed.push(completedSlot)\n  \n      if(completedSlot.hasMissedBlock) {\n        let totalSlotCount = upcoming.length + completed.length + 1\n        let roundSlot = this.getRoundSlot(totalSlotCount)\n        let matchingDelegate = this.roundStore.activeDelegates.get(roundSlot.publicKey)\n        let lastSlot = upcoming[upcoming.length - 1] || slot\n        upcoming.push(basicSlot(totalSlotCount, matchingDelegate, nextMsTimestamp(lastSlot.timestamp)))\n      } else {\n        hasFoundForger = true\n      }\n    }\n\n    return { completed, upcoming }\n  }\n\n  get missedBlockCount() {\n    return this.completedSlots.filter(s => s.hasMissedBlock).length\n  }\n\n  get remainingSlotCount() {\n    return this.upcomingSlots.length\n  }\n\n  get slots() {\n    return this.completedSlots.concat(this.upcomingSlots)\n  }\n\n  get successfulForgeCount() {\n    return this.completedSlots.filter(s => !s.hasMissedBlock).length\n  }\n  \n  get totalForgedAmount() {\n    return this.completedSlots\n      .filter(s => !s.hasMissedBlock)\n      .reduce((sum, slot) => sum.plus(slot.totalForged), Big(0))\n  }\n}\n\ndecorate(SlotStore, {\n  completedSlots: observable,\n  init: task,\n  missedBlockCount: computed,\n  processReceivedBlock: action,\n  remainingSlotCount: computed,\n  slots: computed,\n  successfulForgeCount: computed,\n  totalForgedAmount: computed,\n  upcomingSlots: observable,\n})\n","import { fromApiString } from '../domain/util/format'\nimport { byDescending } from '../domain/util/sorters'\nimport { currentMsTimestamp, fromApiToMs, nextMsTimestamp } from '../domain/util/time'\n\nconst delegateCount = 201\n\nexport function createSlotFromBlock(slot, block) {\n  let hasMissedBlock = !block || slot.publicKey !== block.generatorPublicKey\n  let blockProps = hasMissedBlock ? {} : {\n    totalForged: fromApiString(block.totalForged),\n  }\n  return {\n    ... slot,\n    hasMissedBlock,\n    ... blockProps,\n    hasBeenCompleted: true,\n  }\n}\n\nexport function completedSlotFromDelegate(slot, delegate, timestamp) {\n  const blockProps = slot.hasMissedBlock ? {} : {\n    totalForged: fromApiString(slot.totalForged),\n  }\n  return {\n    ... basicSlot(slot.roundSlot, delegate, timestamp),\n    hasBeenCompleted: true,\n    hasMissedBlock: slot.hasMissedBlock,\n    ... blockProps,\n  }\n}\n\nexport function basicSlot(number, delegate, timestamp) {\n  return {\n    address: delegate.address,\n    hasBeenCompleted: false,\n    name: delegate.username,\n    number,\n    publicKey: delegate.publicKey,\n    rank: delegate.rate,\n    slot: number,\n    timestamp,\n    vote: fromApiString(delegate.vote),\n  }\n}\n\nexport function getSlotsFromActiveDelegates(activeDelegates, lastProcessedTimestamp) {\n  let timestamp = nextMsTimestamp(lastProcessedTimestamp)\n  let slotNumber = 1\n  const upcomingSlots = []\n\n  for (let delegate of activeDelegates.values()) {\n    upcomingSlots.push(basicSlot(slotNumber, delegate, timestamp))\n\n    timestamp = nextMsTimestamp(timestamp)\n    slotNumber += 1\n  }\n\n  return upcomingSlots\n}\n\nexport default function getSlotsFromInitialData(forgingInfo, blockInfo, delegates) {\n\n  const blocksToProcess = blockInfo.blocks.concat([])\n  let result = {\n    blocksToProcess,\n    hasProcessedAllSlots: false,\n    lastProcessedRoundSlot: 0,\n    lastProcessedGlobalSlot: forgingInfo.firstSlot - 1,\n    lastTimestamp: nextMsTimestamp(fromApiToMs(blockInfo.endOfLastRoundTimestamp)),\n    remainingBlockCount: delegateCount - blocksToProcess.length,\n    slots: [],\n  }\n\n  while (!result.hasProcessedAllSlots || result.remainingBlockCount > 0) {\n    result = forgingInfo.forgers.reduce((all, forger) => {\n      const globalSlot = all.lastProcessedGlobalSlot + 1\n      all.hasProcessedAllSlots = globalSlot >= forgingInfo.currentSlot\n      if (all.hasProcessedAllSlots && all.remainingBlockCount === 0) return all\n\n      const roundSlot = all.lastProcessedRoundSlot + 1\n      const slotTimestamp = nextMsTimestamp(all.lastTimestamp)\n      let slot = basicSlot(roundSlot, delegates.get(forger), slotTimestamp)\n\n      if (!all.hasProcessedAllSlots) {\n        let block = all.blocksToProcess[0]\n        slot = createSlotFromBlock(slot, block)\n  \n        if (!slot.hasMissedBlock) {\n          all.blocksToProcess.shift()\n        }\n      } else {\n        all.remainingBlockCount -= 1\n      }\n\n      all.lastProcessedRoundSlot = roundSlot\n      all.lastProcessedGlobalSlot = globalSlot\n      all.lastTimestamp = slotTimestamp\n      all.slots.push(slot)\n      return all\n    }, result)\n  }\n\n  return result\n}\n","module.exports = require(\"@babel/polyfill\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/colors/green\");","module.exports = require(\"@material-ui/core/colors/grey\");","module.exports = require(\"@material-ui/core/colors/red\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/Announcement\");","module.exports = require(\"@material-ui/icons/CheckCircle\");","module.exports = require(\"@material-ui/icons/Update\");","module.exports = require(\"big-js\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"javascript-time-ago\");","module.exports = require(\"javascript-time-ago/locale/en\");","module.exports = require(\"mobx\");","module.exports = require(\"mobx-react\");","module.exports = require(\"mobx-task\");","module.exports = require(\"node-fetch\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"react\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-jss/lib/JssProvider\");","module.exports = require(\"react-jss/lib/jss\");","module.exports = require(\"react-router-dom\");"],"sourceRoot":""}