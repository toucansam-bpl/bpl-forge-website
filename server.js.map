{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./public/img/bpl-logo.png","webpack:///./src/server/middleware/renderer.js","webpack:///./src/server/server.js","webpack:///./src/shared/App.js","webpack:///./src/shared/AppToolbar.js","webpack:///./src/shared/DelegateScreen/DelegateActivity.js","webpack:///./src/shared/DelegateScreen/DelegateInfo.js","webpack:///./src/shared/DelegateScreen/DelegateScreen.js","webpack:///./src/shared/RoundScreen/NetworkStatus.js","webpack:///./src/shared/RoundScreen/RoundProgress.js","webpack:///./src/shared/RoundScreen/RoundScreen.js","webpack:///./src/shared/RoundScreen/RoundSlots.js","webpack:///./src/shared/RoundScreen/RoundStatus.js","webpack:///./src/shared/domain/api/NodeApi.js","webpack:///./src/shared/domain/util/format.js","webpack:///./src/shared/domain/util/logger.js","webpack:///./src/shared/domain/util/rounds.js","webpack:///./src/shared/domain/util/sorters.js","webpack:///./src/shared/domain/util/time.js","webpack:///./src/shared/stores/BlockStore.js","webpack:///./src/shared/stores/DelegateStore.js","webpack:///./src/shared/stores/NetworkStore.js","webpack:///./src/shared/stores/PriceStore.js","webpack:///./src/shared/stores/SlotStore.js","webpack:///./src/shared/stores/slotFactory.js","webpack:///external \"@babel/polyfill\"","webpack:///external \"@material-ui/core\"","webpack:///external \"@material-ui/core/colors/green\"","webpack:///external \"@material-ui/core/colors/grey\"","webpack:///external \"@material-ui/core/colors/red\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/Announcement\"","webpack:///external \"@material-ui/icons/CheckCircle\"","webpack:///external \"@material-ui/icons/Update\"","webpack:///external \"big-js\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"javascript-time-ago\"","webpack:///external \"javascript-time-ago/locale/en\"","webpack:///external \"mobx\"","webpack:///external \"mobx-react\"","webpack:///external \"mobx-task\"","webpack:///external \"node-fetch\"","webpack:///external \"path\"","webpack:///external \"querystring\"","webpack:///external \"react\"","webpack:///external \"react-dom/server\"","webpack:///external \"react-jss/lib/JssProvider\"","webpack:///external \"react-jss/lib/jss\"","webpack:///external \"react-router-dom\""],"names":["renderFullPage","html","css","Promise","resolve","reject","filePath","__dirname","err","page","replace","req","res","sheetsRegistry","SheetsRegistry","console","log","url","theme","palette","primary","grey","accent","red","type","generateClassName","nodeApi","NodeApi","priceStore","PriceStore","delegateStore","DelegateStore","networkStore","NetworkStore","blockStore","BlockStore","slotStore","SlotStore","stores","Map","toString","runner","pageHtml","send","status","end","app","use","get","renderer","express","static","listen","styles","content","marginTop","padding","minHeight","App","classes","props","RoundScreen","DelegateScreen","Component","flex","formControl","margin","spacing","unit","minWidth","headerLink","color","textDecoration","AppToolbar","evt","target","value","setApiServer","logo","height","verticalAlign","marginLeft","apiServer","name","handleServerChange","apiServers","map","server","DelegateActivity","activeDelegate","rewardBlockPagination","items","b","id","timestamp","reward","totalFee","totalForged","totalCount","pageSize","pageNumber","DelegateInfo","vote","voters","v","address","username","balance","match","setActiveDelegate","params","pending","rejected","message","resolved","NetworkStatus","networkHeight","seedStatus","ok","total","seedNodes","n","RoundProgress","remainingSlotCount","successfulForgeCount","missedBlockCount","missedBlockAvatar","backgroundColor","error","main","successfulBlockAvatar","green","Slot","key","hasBeenCompleted","hasMissedBlock","rest","diff","className","component","AnnouncementIcon","Forged","CheckCircle","toFixed","UpdateIcon","slot","rank","Number","toLocaleString","Date","RoundSlots","init","slots","forger","lastProcessedBlockHeight","startHeight","endHeight","makeApiRequest","query","qs","stringify","requestUrl","method","rawResponse","json","response","success","Error","getUrl","offset","limit","blockResponse","blocks","generatorPublicKey","senderId","recipientId","path","alternateServer","publicKey","TimeAgo","locale","en","timeAgo","fromApiString","bplString","div","big","digits","toFixedLocale","toHowLong","format","apply","Array","prototype","slice","call","arguments","delegateCount","getFirstBlockHeightOfRound","roundNumber","getLastBlockHeightOfRound","getRoundNumberFromHeight","Math","floor","byAscending","prop","a","byDescending","blockInterval","blockIntervalInMs","epochTimeUtc","UTC","epochSeconds","currentMsTimestamp","now","fromApiToMs","apiTimestamp","getApiTimestamp","currentSeconds","nextMsTimestamp","msTimestamp","getTimestamp","blockListener","hasLoadedInitialBlocks","initialBlocks","unprocessedBlocks","resume","setInterval","listenForNewBlocks","suspend","clearInterval","hasChangedServer","loadInitialBlocks","hasLoadedNewBlocks","hasNextBlock","getBlocks","newBlocks","filter","length","forEach","set","size","currentBlock","lastBlockHeightOfLastRound","additionalBlocks","concat","lastBlockOfLastRound","pop","next","nextBlockHeight","has","observable","computed","task","action","nextBlock","Paginator","allItems","pageStartIndex","pageEndIndex","addressToPublicKey","delegates","isInitialized","getActiveDelegates","d","delegate","getRewardBlocks","rewardBlocks","getVoters","transformedBlocks","totalAmount","count","accounts","hasLoadedDelegates","seedNodeStatus","i","getSyncStatus","push","serverName","selectedServer","s","reduce","maxHeight","node","priceInterval","priceUrl","currency","listener","prices","USD","EUR","fetchPrice","priceResponse","priceResult","price","completedSlots","hasCompletedSlotsForRound","isAwaitingBlock","isAwaitingSlot","roundSlots","slotInProcess","upcomingSlots","unprocessedSlots","getRoundForgerData","forgerData","blockInfo","endOfLastRoundTimestamp","reverse","lastSlotOfLastRound","getSlotNumber","firstSlot","currentSlot","slotDiff","reverseIndex","firstForgerIndex","processingSlot","forgerIndex","returnedForgers","globalSlot","localSlot","firstForgers","remainingForgers","forgingInfo","forgers","result","blockTimestamp","processReceivedBlock","totalSlot","watchForNextBlock","blockSlots","all","hasFoundProcessedSlot","completedSlot","block","totalSlotCount","roundSlot","getRoundSlot","matchingDelegate","lastSlot","additionalSlots","hasUnprocessedSlots","processNextSlot","shift","watchForUnprocessedSlot","nextSlot","nextUnprocessedSlot","hasLeftUpcoming","shouldBeVisible","setTimeout","unshift","sum","plus","hasSlotInProcess","slotJoinedCompleted","slotLeftUpcoming","totalForgedAmount","createSlotFromBlock","blockProps","completedSlotFromDelegate","basicSlot","number","rate","getSlotsFromInitialData","blocksToProcess","hasProcessedAllSlots","lastProcessedRoundSlot","lastProcessedGlobalSlot","lastTimestamp","remainingBlockCount","slotTimestamp"],"mappings":"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C,SAAG,CAACmC,sBAAJ,GAA6B9B,SAA7B;AACAL,SAAG,CAACoC,uBAAJ,GAA8BhD,UAA9B;AACAY,SAAG,CAACqC,aAAJ,GAAoBE,aAApB;AACAvC,SAAG,CAAClL,KAAJ,CAAU6H,IAAV,CAAepI,IAAf;AACA,aAAOyL,GAAP;AACD,KAzBQ,EAyBNN,MAzBM,CAAT;AA0BD;;AAED,SAAOA,MAAP;AACD,C;;;;;;;;;;;;;;;;;;;;;;;;ACxFD,4C;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,0D;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,4D;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,gD;;;;;;;;;;;ACAA,0D;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,6C","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = __webpack_public_path__ + \"static/media/bpl-logo.8b1be392.png\";","import React from 'react'\nimport { readFile } from 'fs'\nimport { resolve as resolvePath } from 'path'\nimport { Provider as MobxProvider } from 'mobx-react'\nimport { renderToString } from 'react-dom/server'\nimport { SheetsRegistry } from 'react-jss/lib/jss'\nimport JssProvider from 'react-jss/lib/JssProvider'\nimport { StaticRouter } from 'react-router-dom'\nimport { MuiThemeProvider, createMuiTheme, createGenerateClassName, } from '@material-ui/core/styles'\nimport grey from '@material-ui/core/colors/grey'\nimport red from '@material-ui/core/colors/red'\n\nimport App from '../../shared/App'\nimport BlockStore from '../../shared/stores/BlockStore'\nimport DelegateStore from '../../shared/stores/DelegateStore'\nimport NodeApi from '../../shared/domain/api/NodeApi'\nimport PriceStore from '../../shared/stores/PriceStore'\nimport SlotStore from '../../shared/stores/SlotStore'\nimport NetworkStore from '../../shared/stores/NetworkStore';\n\n\nconst renderFullPage = async (html, css) => \n  new Promise((resolve, reject) => {\n    const filePath = resolvePath(__dirname, '..', '..', '..', 'public', 'index.html')\n  \n    readFile(filePath, 'utf8', (err, page) => {\n      if (err) {\n        return reject(err)\n      }\n\n      resolve(page.replace(\n        '<div id=\"root\"></div>',\n        `<div id=\"root\">${html}</div>`\n      ).replace(\n        '<style id=\"jss-server-side\"></style>',\n        `<style id=\"jss-server-side\">${css}</style>`\n      ))\n    })\n  })\n\n\nexport default (req, res) => {\n  // Create a sheetsRegistry instance.\n  const sheetsRegistry = new SheetsRegistry()\n\n  console.log(`Serving ${req.url}`)\n\n  // Create a theme instance.\n  const theme = createMuiTheme({\n    palette: {\n      primary: grey,\n      accent: red,\n      type: 'light',\n    },\n  })\n\n  const generateClassName = createGenerateClassName()\n  const nodeApi = new NodeApi()\n  const priceStore = new PriceStore()\n  const delegateStore = new DelegateStore(nodeApi)\n  const networkStore = new NetworkStore(nodeApi)\n  const blockStore = new BlockStore(nodeApi, networkStore)\n  const slotStore = new SlotStore(nodeApi, blockStore, delegateStore, networkStore)\n  \n  const stores = {\n    blockStore,\n    delegateStore,\n    networkStore,\n    priceStore,\n    slotStore,\n  }\n\n  // Render the component to a string.\n  const html = renderToString(\n    <JssProvider registry={sheetsRegistry} generateClassName={generateClassName}>\n      <MuiThemeProvider theme={theme} sheetsManager={new Map()}>\n        <MobxProvider {... stores}>\n          <StaticRouter location={req.url} context={{}}>\n            <App />\n          </StaticRouter>\n        </MobxProvider>\n      </MuiThemeProvider>\n    </JssProvider>\n  )\n\n  // Grab the CSS from our sheetsRegistry.\n  const css = sheetsRegistry.toString()\n\n  const runner = async () => {\n    try {\n      const pageHtml = await renderFullPage(html, css)\n      res.send(pageHtml)\n    } catch (ex) {\n      console.log(`Error in server: ${ex}`)\n      res.status(500).end()\n    }\n  }\n  runner()\n}\n","import express from 'express'\nimport cors from 'cors'\n\nimport renderer from './middleware/renderer'\n\n\nconst app = express()\n\napp.use(cors())\n\napp.get('^/$', renderer)\n\napp.use(express.static('public'))\n\napp.get('*', renderer)\n\napp.listen(3000, () => {\n  console.log(`Server is listening on port: 3000`)\n})\n","import React, { Component } from 'react'\nimport {\n  CssBaseline,\n  withStyles,\n} from '@material-ui/core'\nimport { Route, Switch } from 'react-router-dom'\n\nimport AppToolbar from './AppToolbar';\nimport DelegateScreen from './DelegateScreen/DelegateScreen'\nimport RoundScreen from './RoundScreen/RoundScreen'\n\n\nconst styles = theme => ({\n  content: {\n    marginTop: \"70px\",\n    padding: \"30px 15px\",\n    minHeight: \"calc(100% - 123px)\"\n  },\n})\n\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppToolbar />\n\n        <div className={classes.content}>\n          <Switch>\n            <Route path=\"/\" exact component={RoundScreen} />\n            <Route path=\"/delegate/:address\" component={DelegateScreen} />\n          </Switch>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Link, } from 'react-router-dom'\nimport {\n  AppBar,\n  FilledInput,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Toolbar,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\n\nimport logo from '../../public/img/bpl-logo.png'\n\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n  headerLink: {\n    color: '#fff',\n    textDecoration: 'none',\n  },\n})\n\n\nclass AppToolbar extends Component {\n  handleServerChange(evt) {\n    console.log(evt.target.value)\n    this.props.networkStore.setApiServer(evt.target.value)\n  }\n\n  render() {\n    const { classes, networkStore, } = this.props\n\n    return (\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            className={classes.flex}\n          >\n            <img\n              src={logo}\n              alt=\"BPL logo\"\n              style={{ height: '1.16667em', verticalAlign: 'bottom' }}\n            />\n            <span style={{ marginLeft: '15px' }}>\n              <Link to=\"/\" className={classes.headerLink}>BPL Delegate Explorer</Link>\n            </span>\n          </Typography>\n\n          <form>\n            <FormControl variant=\"filled\" className={classes.formControl}>\n              <InputLabel htmlFor=\"server\">Server</InputLabel>\n              <Select\n                value={networkStore.apiServer.name}\n                onChange={evt => this.handleServerChange(evt)}\n                input={<FilledInput name=\"server\" id=\"server\" />}\n              >\n                {networkStore.apiServers.map(server =>\n                  (<MenuItem key={server.name} value={server.name}>{server.name}</MenuItem>)\n                )}\n              </Select>\n            </FormControl>\n          </form>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nexport default withStyles(styles)(inject('networkStore')(observer(AppToolbar)))\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Grid,\n         Table, TableBody, TableCell, TableFooter, TableHead, TablePagination, TableRow,\n         Typography,\n      } from '@material-ui/core'\n\n\nimport { toFixed } from '../domain/util/format'\n\n\nexport class DelegateActivity extends Component {\n  render() {\n    const { delegateStore } = this.props\n\n    return (\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Height</TableCell>\n                <TableCell>Time</TableCell>\n                <TableCell numeric>Reward</TableCell>\n                <TableCell numeric>Fees</TableCell>\n                <TableCell numeric>Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {delegateStore.activeDelegate.rewardBlockPagination.items.map(b => (\n                <TableRow key={b.id}>\n                  <TableCell>{b.height}</TableCell>\n                  <TableCell>{b.timestamp}</TableCell>\n                  <TableCell numeric>{toFixed(b.reward, 8)}</TableCell>\n                  <TableCell numeric>{toFixed(b.totalFee, 8)}</TableCell>\n                  <TableCell numeric>{toFixed(b.totalForged, 8)}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  colSpan={5}\n                  count={delegateStore.activeDelegate.rewardBlockPagination.totalCount}\n                  rowsPerPage={delegateStore.activeDelegate.rewardBlockPagination.pageSize}\n                  page={delegateStore.activeDelegate.rewardBlockPagination.pageNumber}\n                  onChangePage={evt => console.log(evt)}\n                  onChangeRowsPerPage={evt => console.log(evt)}\n                  // ActionsComponent={TablePaginationActionsWrapped}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default inject('delegateStore')(observer(DelegateActivity))\n\n/*\n<h5>\n{formatWithoutDigits(fromApiString(delegateStore.activeDelegate.vote))}{' '}\nBPL ({toCurrencyFormat(\n  sds.delegateCurrencyValue,\n  sds.price.currency\n)})\n</h5>\n*/\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Grid, Table, TableBody, TableCell, TableHead, TableRow, Typography, } from '@material-ui/core'\n\n\nimport { toFixedLocale } from '../domain/util/format'\n\n\nexport class DelegateInfo extends Component {\n  render() {\n    const { delegateStore } = this.props\n\n    return (\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <div>\n            <h5>\n              {toFixedLocale(delegateStore.activeDelegate.vote)} BPL\n            </h5>\n          </div>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Voter</TableCell>\n                <TableCell numeric>BPL</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {delegateStore.activeDelegate.voters.map(v => (\n                <TableRow key={v.address}>\n                  <TableCell>{v.username || v.address}</TableCell>\n                  <TableCell numeric>{toFixedLocale(v.balance)}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default inject('delegateStore')(observer(DelegateInfo))\n\n/*\n<h5>\n{formatWithoutDigits(fromApiString(delegateStore.activeDelegate.vote))}{' '}\nBPL ({toCurrencyFormat(\n  sds.delegateCurrencyValue,\n  sds.price.currency\n)})\n</h5>\n*/\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Grid, Typography, } from '@material-ui/core'\n\n\nimport DelegateActivity from './DelegateActivity'\nimport DelegateInfo from './DelegateInfo'\n\n\nexport class DelegateScreen extends Component {\n  async componentDidMount() {\n    const { delegateStore, match } = this.props\n    delegateStore.setActiveDelegate(match.params.address)\n  }\n\n  render() {\n    const { delegateStore } = this.props\n\n    return (\n      <React.Fragment>\n        <Grid container>\n        {delegateStore.setActiveDelegate.match({\n          pending: () => <div>Loading, please wait..</div>,\n          rejected: (err) => <div>Error: {err.message}</div>,\n          resolved: () => (\n            <Grid item>\n              <Typography variant=\"headline\">\n                {`Delegate - ${delegateStore.activeDelegate.username}`}\n              </Typography>\n              <DelegateInfo />\n              <DelegateActivity />\n            </Grid>\n          )\n        })}\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default inject('delegateStore')(observer(DelegateScreen))\n\n/*\n        <Grid container>\n          <ItemGrid xs={12} sm={8}>\n            <RegularCard\n              cardTitle={title}\n              cardSubtitle=\"\"\n              content={\n                selectedDelegateStore.hasSelectedDelegate ? (\n                  <DelegateInfo />\n                ) : (\n                  <div>No delegate</div>\n                )\n              }\n            />\n          </ItemGrid>\n\n          <ItemGrid xs={12} sm={4}>\n            <BplPrice />\n            <EstimatedReward />\n          </ItemGrid>\n        </Grid>\n        <DelegateActivity />\n*/\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Card, CardContent, Grid, Typography, } from '@material-ui/core'\n\n\nclass NetworkStatus extends Component {\n  render() {\n    const { networkStore, } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n          <Grid container direction=\"column\" spacing={8}>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                Network Height: {networkStore.networkHeight}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                Seed Status: {`${networkStore.seedStatus.ok} / ${networkStore.seedStatus.total}`}\n              </Typography>\n\n              <ul>\n                {networkStore.seedNodes.map(n => {\n                  return (\n                    <li key={n.server}>\n                      {`${n.server} - ${n.height}`}\n                    </li>\n                  )\n                })}\n              </ul>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('networkStore')(observer(NetworkStatus))\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Card, CardContent, Grid, Typography, } from '@material-ui/core'\n\n\nclass RoundProgress extends Component {\n  render() {\n    const { slotStore, } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n          <Grid container direction=\"column\" spacing={8}>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                Remaining Slots: {slotStore.remainingSlotCount}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                Successful Forges: {slotStore.successfulForgeCount}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                Missed Blocks: {slotStore.missedBlockCount}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('slotStore')(observer(RoundProgress))\n","import React, { Component } from 'react'\nimport { Grid, Typography, } from '@material-ui/core'\n\nimport NetworkStatus from './NetworkStatus'\nimport RoundProgress from './RoundProgress'\nimport RoundSlots from './RoundSlots'\nimport RoundStatus from './RoundStatus';\n\n\nexport default class RoundScreen extends Component {\n  render() {\n    return (\n      <Grid container direction=\"column\" spacing={24}>\n        <Grid item xs={12}>\n          <Typography variant=\"headline\">\n            Current Forging Round \n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={24}>\n            <Grid item xs={3}>\n              <NetworkStatus />\n            </Grid>\n            <Grid item xs={3}>\n              <RoundStatus />\n            </Grid>\n            <Grid item xs={3}>\n              <RoundProgress />\n            </Grid>\n            <Grid item xs={3}>\n              <Typography variant=\"h5\">\n                Rewards\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <RoundSlots />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { \n          Avatar,\n          Card,\n          CardContent,\n          Table,\n          TableBody,\n          TableCell,\n          TableHead,\n          TableRow,\n          withStyles,\n        } from '@material-ui/core'\nimport green from '@material-ui/core/colors/green'\n\nimport AnnouncementIcon from '@material-ui/icons/Announcement'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport UpdateIcon from '@material-ui/icons/Update'\n\nconst styles = theme => ({\n  missedBlockAvatar: {\n    backgroundColor: theme.palette.error.main,\n  },\n  successfulBlockAvatar: {\n    backgroundColor: green[500],\n  },\n})\n\nconst Slot = withStyles(styles)(({ key, hasBeenCompleted, hasMissedBlock, ... rest, }) => {\n  const diff = hasBeenCompleted\n    ? hasMissedBlock\n      ? {\n        className: rest.classes.missedBlockAvatar,\n        component: AnnouncementIcon,\n        Forged: () => <TableCell align=\"center\">{ 'missed' }</TableCell>,\n      } : {\n        className: rest.classes.successfulBlockAvatar,\n        component: CheckCircle,\n        Forged: () => <TableCell align=\"right\">{rest.totalForged.toFixed(4)}</TableCell>,\n      }\n    : {\n      className: '',\n      component: UpdateIcon,\n      Forged: () => <TableCell align=\"center\">{ '--' }</TableCell>,\n    }\n\n  return (\n    <TableRow key={key}>\n      <TableCell>\n        <Avatar className={diff.className}>\n          <diff.component />\n        </Avatar>\n      </TableCell>\n      <TableCell align=\"right\">{rest.slot}</TableCell>\n      <TableCell>{rest.name}</TableCell>\n      <TableCell align=\"right\">{rest.rank}</TableCell>\n      <TableCell align=\"right\">{Number(rest.vote.toFixed(0)).toLocaleString()}</TableCell>\n      <diff.Forged />\n      <TableCell align=\"right\">{new Date(rest.timestamp).toLocaleString()}</TableCell>\n    </TableRow>\n  )\n})\n\n\nclass RoundSlots extends Component {\n  render() {\n    const { slotStore } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n          {slotStore.init.match({\n            pending: () => <div>Loading, please wait..</div>,\n            rejected: (err) => <div>Error: {err.message}</div>,\n            resolved: () => (\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>&nbsp;</TableCell>\n                    <TableCell align=\"right\">Slot</TableCell>\n                    <TableCell>Delegate</TableCell>\n                    <TableCell align=\"right\">Rank</TableCell>\n                    <TableCell align=\"right\">Vote</TableCell>\n                    <TableCell align=\"right\">Forged (BPL)</TableCell>\n                    <TableCell align=\"right\">Date</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {slotStore.slots.map(forger => (\n                    <Slot key={forger.slot} {...forger} />\n                  ))}\n                </TableBody>\n              </Table>\n            )\n          })} \n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('slotStore')(observer(RoundSlots))\n","import React, { Component } from 'react'\nimport { inject, observer, } from 'mobx-react'\nimport { Card, CardContent, Grid, Typography, } from '@material-ui/core'\n\n\nclass RoundProgress extends Component {\n  render() {\n    const { blockStore, } = this.props\n\n    return (\n      <Card>\n        <CardContent>\n        {blockStore.init.match({\n          pending: () => <div>Loading, please wait..</div>,\n          rejected: (err) => <div>Error: {err.message}</div>,\n          resolved: () => (\n            <Grid container direction=\"column\" spacing={8}>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Round Status: In Progress\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Current Height: {blockStore.lastProcessedBlockHeight}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  Start Height: {blockStore.startHeight}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  End Height: {blockStore.endHeight}\n                </Typography>\n              </Grid>\n            </Grid>\n          )}\n        )}\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default inject('blockStore')(observer(RoundProgress))\n","import fetch from 'node-fetch'\nimport qs from 'querystring'\n\nasync function makeApiRequest(url, params) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const query = params ? `?${qs.stringify(params)}` : ''\n      const requestUrl = `${url}${query}`\n\n      const rawResponse = await fetch(requestUrl, {\n        method: 'GET',\n      })\n      const response = await rawResponse.json()\n\n      if (response.success) {\n        resolve(response)\n      } else {\n        console.log(response)\n        reject(new Error(`Request did not complete successfully.`))\n      }\n    } catch (err) {\n      console.log(`Error from ${url}`)\n      reject(err)\n    }\n  })\n}\n\nexport default class NodeApi {\n  apiServer = 'https://explorer.dated.fun/node'\n\n  async getActiveDelegates() {\n    return makeApiRequest(this.getUrl('delegates'), 0, 201)\n    /*\n    return {\n      delegates: [\n        { publicKey: 1, blockRoundSlot: 1, username: 'Delegate 1', },\n        { publicKey: 2, blockRoundSlot: 2, username: 'Delegate 2', },\n        { publicKey: 3, blockRoundSlot: 3, username: 'Delegate 3', },\n        { publicKey: 4, blockRoundSlot: 4, username: 'Delegate 4', },\n        { publicKey: 5, blockRoundSlot: 5, username: 'Delegate 5', },\n      ]\n    }\n    */\n  }\n\n  async getBlocks(offset = 0, limit = 100) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const blockResponse = await makeApiRequest(this.getUrl('blocks'), { limit, offset })\n        resolve(blockResponse.blocks)\n      } catch(ex) {\n        reject(ex)\n      }\n    })\n  }\n\n  async getCurrentRound() {\n    return makeApiRequest(this.getUrl('rounds'))\n    /*\n    return {\n      delegateActivity: [\n        { publicKey: 1, hasMissedBlock: false, roundSlot: 1, totalForged: '12345668.823422', },\n        { publicKey: 2, hasMissedBlock: true, roundSlot: 2, totalForged: '23424.823422', },\n        { publicKey: 3, hasMissedBlock: false, roundSlot: 3, totalForged: '23893054.823422', },\n      ],\n      expectedForgers: [\n        { publicKey: 4, blockRoundSlot: 4, username: 'Delegate 4', },\n        { publicKey: 5, blockRoundSlot: 5, username: 'Delegate 5', },\n      ],\n    }\n    */\n  }\n\n  async getRoundForgerData() {\n    return makeApiRequest(this.getUrl('delegates/getNextForgers'), { limit: 201, })\n  }\n\n  async getRewardBlocks(generatorPublicKey) {\n    return makeApiRequest(this.getUrl('blocks'), { generatorPublicKey })\n  }\n\n  async getSyncStatus(server) {\n    return makeApiRequest(this.getUrl('loader/status/sync', server))\n  }\n\n  async getTransactions(address) {\n    return makeApiRequest(this.getUrl('transactions'), {\n      senderId: address,\n      recipientId: address,\n    })\n  }\n\n  getUrl(path, alternateServer) {\n    const server = alternateServer || this.apiServer\n    return `${server}/api/${path}`\n  }\n\n  async getVoters(publicKey) {\n    return makeApiRequest(this.getUrl('delegates/voters'), { publicKey })\n  }\n\n  setApiServer(server) {\n    this.apiServer = server\n  }\n}\n","import Big from 'big-js'\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en'\n\nTimeAgo.locale(en)\n\n// Create relative date/time formatter.\nconst timeAgo = new TimeAgo('en-US')\n\nexport function fromApiString(bplString) {\n  return Big(bplString).div('100000000')\n}\n\nexport function toFixed(big, digits = 0) {\n  return big.toFixed(digits)\n}\n\nexport function toFixedLocale(big, digits = 0) {\n  return Number(big.toFixed(digits)).toLocaleString()\n}\n\nexport function toHowLong(timestamp) {\n  return timeAgo.format(timestamp)\n}\n","\nexport function log() {\n  console.log.apply(console, Array.prototype.slice.call(arguments, 0))\n}\n","const delegateCount = 201\n\nexport const getFirstBlockHeightOfRound = roundNumber => getLastBlockHeightOfRound(roundNumber - 1) + 1\nexport const getLastBlockHeightOfRound = roundNumber => roundNumber * delegateCount\nexport const getRoundNumberFromHeight = height => Math.floor((height-1) / delegateCount) + 1\n","\nexport const byAscending = prop => (a, b) => a[prop] > b[prop] ? 1 : b[prop] > a[prop] ? -1 : 0\n\nexport const byDescending = prop => (a, b) => a[prop] > b[prop] ? -11 : b[prop] > a[prop] ? 1 : 0\n","export const blockInterval = 15\nconst blockIntervalInMs = blockInterval * 1000\nconst epochTimeUtc = Date.UTC(2017, 2, 21, 13, 0, 0, 0)\nconst epochSeconds = Math.floor(epochTimeUtc / 1000)\n\n\nexport const currentMsTimestamp = () =>\n  Date.now()\n\nexport const fromApiToMs = apiTimestamp =>\n  (apiTimestamp + epochSeconds) * 1000\n\nexport function getApiTimestamp() {\n  const currentSeconds = Math.floor(currentMsTimestamp() / 1000)\n\n  return currentSeconds - epochSeconds\n}\n\nexport const nextMsTimestamp = msTimestamp =>\n  msTimestamp + blockIntervalInMs\n\nexport function getTimestamp(apiTimestamp) {\n  return (apiTimestamp + epochSeconds) * 1000\n}\n","import { action,\n         computed, \n         decorate,\n         observable,\n         onBecomeObserved,\n         onBecomeUnobserved,\n         when,\n         runInAction,\n       } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { log } from '../domain/util/logger'\nimport { getFirstBlockHeightOfRound,\n         getLastBlockHeightOfRound,\n         getRoundNumberFromHeight,\n       } from '../domain/util/rounds'\nimport { byAscending } from '../domain/util/sorters'\n\nconst blockInterval = 15 * 1000\n\n\nexport default class BlockStore {\n  blockListener\n  endHeight\n  hasLoadedInitialBlocks = false\n  initialBlocks = []\n  lastProcessedBlockHeight\n  startHeight\n  unprocessedBlocks = new Map()\n\n  constructor(nodeApi, networkStore) {\n    this.nodeApi = nodeApi\n    this.networkStore = networkStore\n\n    onBecomeObserved(this, 'hasNextBlock', this.resume)\n    onBecomeUnobserved(this, 'hasNextBlock', this.suspend)\n\n    when(() => this.networkStore.hasChangedServer, () => this.init())\n  }\n\n  async init() {\n    log('Initializing Block Store.')\n    await this.loadInitialBlocks()\n  }\n\n  resume = () => {\n    log('Resuming block listener.')\n    this.blockListener = setInterval(() => this.listenForNewBlocks(), blockInterval)\n  }\n\n  async listenForNewBlocks() {\n    let offset = 0\n    let hasLoadedNewBlocks = true\n    while (!this.hasNextBlock && hasLoadedNewBlocks) {\n      let blocks = await this.nodeApi.getBlocks(offset, 10)\n      let newBlocks = blocks.filter(b => b.height > this.lastProcessedBlockHeight)\n      \n      if (newBlocks.length > 0) {\n        newBlocks.forEach(b => this.unprocessedBlocks.set(b.height, b))\n        log(`There are ${newBlocks.length} new blocks awaiting processing out of ${this.unprocessedBlocks.size} total.`)\n        offset += 10\n      } else {\n        log(`No new blocks loaded.`)\n        hasLoadedNewBlocks = false\n      }\n    }\n  }\n\n  suspend = () => {\n    log('Suspending block listener.')\n    clearInterval(this.blockListener)\n  }\n\n  get hasNextBlock() {\n    return this.unprocessedBlocks.has(this.nextBlockHeight)\n  }\n\n  async loadInitialBlocks() {\n    return new Promise(async (resolve, reject) => {\n      try {\n        let blocks = await this.nodeApi.getBlocks()\n        const currentBlock = blocks[0]\n        const roundNumber = getRoundNumberFromHeight(currentBlock.height)\n        const lastBlockHeightOfLastRound = getLastBlockHeightOfRound(roundNumber - 1)\n    \n        blocks = blocks.filter(b => b.height >= lastBlockHeightOfLastRound)\n\n        if(blocks.length === 100) {\n          let additionalBlocks = await this.nodeApi.getBlocks(100)\n          blocks = blocks.concat(additionalBlocks.filter(b => b.height >= lastBlockHeightOfLastRound))\n        }\n    \n        if(blocks.length === 200) {\n          let additionalBlocks = await this.nodeApi.getBlocks(200, 2)\n          blocks = blocks.concat(additionalBlocks.filter(b => b.height >= lastBlockHeightOfLastRound))\n        }\n        \n        runInAction(() => {\n          this.endHeight = getLastBlockHeightOfRound(roundNumber)\n          this.lastBlockOfLastRound = blocks.pop()\n          this.lastProcessedBlockHeight = lastBlockHeightOfLastRound\n          this.startHeight = getFirstBlockHeightOfRound(roundNumber)\n          this.initialBlocks.replace(blocks)\n          this.hasLoadedInitialBlocks = true\n        })\n        \n        resolve()\n      } catch (ex) {\n        reject(ex)\n      }\n    })\n  }\n\n  nextBlock() {\n    const next = this.unprocessedBlocks.get(this.nextBlockHeight)\n    this.lastProcessedBlockHeight = this.nextBlockHeight\n    log(`Processing block height ${this.lastProcessedBlockHeight}`)\n    return next\n  }\n  \n  get nextBlockHeight() {\n    return this.lastProcessedBlockHeight + 1\n  }\n}\n\ndecorate(BlockStore, {\n  hasLoadedInitialBlocks: observable,\n  hasNextBlock: computed,\n  init: task,\n  initialBlocks: observable,\n  lastProcessedBlockHeight: observable,\n  listenForNewBlocks: action,\n  nextBlock: action,\n  nextBlockHeight: computed,\n  unprocessedBlocks: observable,\n})\n","import { computed, decorate, observable, when, } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { fromApiString } from '../domain/util/format'\n\nclass Paginator {\n  allItems = []\n  pageNumber = 0\n  pageSize = 25\n  totalCount = 0\n\n  constructor(items, totalCount = null) {\n    if (items) {\n      this.allItems.replace(items)\n    }\n\n    this.totalCount = totalCount === null ? items.length : totalCount\n  }\n\n  get items() {\n    const pageStartIndex = this.pageNumber * this.pageSize\n    const pageEndIndex = pageStartIndex + this.pageSize - 1\n    return this.allItems.slice(pageStartIndex, pageEndIndex)\n  }\n}\n\ndecorate(Paginator, {\n  allItems: observable,\n  items: computed,\n  pageNumber: observable,\n  pageSize: observable,\n  totalCount: observable,\n})\n\n\n\nexport default class DelegateStore {\n  activeDelegate = null\n  addressToPublicKey = new Map()\n  delegates = new Map()\n  isInitialized = false\n\n  constructor(nodeApi) {\n    this.nodeApi = nodeApi\n  }\n\n  async init() {\n    console.log('Initializing Delegate Store.')\n    const delegates = await this.nodeApi.getActiveDelegates()\n    delegates.delegates.forEach(d => {\n      this.delegates.set(d.publicKey, d)\n      this.addressToPublicKey.set(d.address, d.publicKey)\n    })\n\n    this.isInitialized = true\n  }\n\n  get(publicKey) {\n    return this.delegates.get(publicKey)\n  }\n\n  get hasLoadedDelegates() {\n    return this.delegates.size > 0\n  }\n\n  async setActiveDelegate(address) {\n    await when(() => this.isInitialized)\n    \n    console.log(`Setting active delegate: ${address}`)\n    const publicKey = this.addressToPublicKey.get(address)\n    const delegate = this.delegates.get(publicKey)\n    const rewardBlocks = await this.nodeApi.getRewardBlocks(publicKey)\n    const voters = await this.nodeApi.getVoters(publicKey)\n    console.log(rewardBlocks)\n    const transformedBlocks = rewardBlocks.blocks.map(b => ({\n      ... b,\n\n      reward: fromApiString(b.reward),\n      totalAmount: fromApiString(b.totalAmount),\n      totalFee: fromApiString(b.totalFee),\n      totalForged: fromApiString(b.totalForged),\n    }))\n\n    this.activeDelegate = {\n      ... delegate,\n\n      rewardBlockPagination: new Paginator(transformedBlocks, rewardBlocks.count),\n      vote: fromApiString(delegate.vote),\n      voters: voters.accounts.map(v => ({\n        ... v,\n\n        balance: fromApiString(v.balance),\n      })),\n    }\n  }\n}\n\n\ndecorate(DelegateStore, {\n  activeDelegate: observable,\n  delegates: observable,\n  hasLoadedDelegates: computed,\n  isInitialized: observable,\n  setActiveDelegate: task,\n})\n","import { action,\n         computed, \n         decorate,\n         observable,\n         runInAction,\n       } from 'mobx'\nimport { task } from 'mobx-task'\n\n\nexport default class NetworkStore {\n  apiServers = [\n    { name: 'https://explorer.dated.fun', url: 'https://explorer.dated.fun/node' },\n    { name: 'https://api.bplforge.com', url: 'https://api.bplforge.com' },\n    { name: 'https://api.blockpool.io', url: 'https://api.blockpool.io' },\n  ]\n  apiServer = this.apiServers[0]\n  hasChangedServer = false\n  seedNodes = []\n\n  constructor(nodeApi) {\n    this.nodeApi = nodeApi\n  }\n\n  async init() {\n    const seedNodes = [\n      /*\n      'http://s01.mc.blockpool.io:9030'\n    , 'http://s02.mc.blockpool.io:9030'\n    , 'http://s03.mc.blockpool.io:9030'\n    , 'http://s04.mc.blockpool.io:9030'\n    , 'http://s05.mc.blockpool.io:9030'\n    , 'http://s06.mc.blockpool.io:9030'\n    , 'http://s07.mc.blockpool.io:9030'\n    , 'http://s08.mc.blockpool.io:9030'\n    , 'http://s09.mc.blockpool.io:9030'\n    , 'http://s10.mc.blockpool.io:9030'\n    */\n      'http://158.176.106.45:9030'\n    , 'http://158.176.106.42:9030'\n    , 'http://158.176.106.58:9030'\n    , 'http://158.176.106.41:9030'\n    , 'http://158.176.106.56:9030'\n    , 'http://158.176.106.54:9030'\n    , 'http://158.176.106.34:9030'\n    , 'http://158.176.106.52:9030'\n    , 'http://158.176.106.55:9030'\n    , 'http://158.176.106.38:9030'\n    ]\n\n    const seedNodeStatus = []\n    for (let i = 0; i < seedNodes.length; i += 1) {\n      let server = seedNodes[i]\n      let status = await this.nodeApi.getSyncStatus(server)\n      seedNodeStatus.push({\n        server,\n        height: status.height,\n      })\n    }\n\n    runInAction(() => {\n      this.seedNodes.replace(seedNodeStatus)\n    })\n  }\n\n  get networkHeight() {\n    return this.seedNodes.reduce((maxHeight, node) => node.height > maxHeight ? node.height : maxHeight, 0)\n  }\n\n  get seedStatus() {\n    const height = this.networkHeight\n    return this.seedNodes.reduce((status, node) => {\n      status.total += 1\n      if (height - node.height <= 1) {\n        status.ok += 1\n      }\n      return status\n    }, {\n      ok: 0,\n      total: 0,\n    })\n  }\n\n  setApiServer(serverName) {\n    const selectedServer = this.apiServers.filter(s => s.name === serverName)[0]\n    this.apiServer = selectedServer\n    this.nodeApi.setApiServer(selectedServer.url)\n    this.hasChangedServer = true\n  }\n}\n\ndecorate(NetworkStore, {\n  apiServer: observable,\n  apiServers: observable,\n  hasChangedServer: observable,\n  init: task,\n  networkHeight: computed,\n  seedNodes: observable,\n  seedStatus: computed,\n  setApiServer: action,\n})\n","import fetch from 'node-fetch'\nimport { log } from '../domain/util/logger'\nimport { action,\n  computed, \n  decorate,\n  observable,\n  onBecomeObserved,\n  onBecomeUnobserved,\n} from 'mobx'\n\nconst priceInterval = 5 * 60 * 1000\nconst priceUrl = 'https://min-api.cryptocompare.com/data/price?fsym=BPL&tsyms=BTC,USD,GBP,EUR,CNY,AUD'\n\n\nexport default class PriceStore {\n  currency = 'USD'\n  listener\n  prices = { USD: '', EUR: '', }\n  \n  constructor() {\n    onBecomeObserved(this, 'price', this.resume)\n    onBecomeUnobserved(this, 'price', this.suspend)\n  }\n\n  async fetchPrice() {\n    const priceResponse = await fetch(priceUrl)\n    const priceResult = await priceResponse.json()\n\n    this.prices = priceResult\n    log(this.currency, priceResult)\n  }\n\n  get price() {\n    return this.prices[this.currency]\n  }\n\n  resume = () => {\n    log('Resuming price listener')\n    this.listener = setInterval(() => this.fetchPrice(), priceInterval)\n  }\n\n  suspend = () => {\n    log('Suspening price listener')\n    clearInterval(this.listener)\n  }\n\n  setCurrency(currency) {\n    this.currency = currency\n  }\n}\n\ndecorate(PriceStore, { \n  currency: observable,\n  fetchPrice: action,\n  price: computed,\n  prices: observable,\n})\n","import Big from 'big-js'\nimport { action,\n         computed, \n         decorate,\n         observable,\n         runInAction,\n         when,\n       } from 'mobx'\nimport { task } from 'mobx-task'\n\nimport { log } from '../domain/util/logger'\nimport getSlotsFromInitialData, { createSlotFromBlock, basicSlot } from './slotFactory'\nimport { blockInterval, getEpochTime, nextMsTimestamp, } from '../domain/util/time'\n\nconst delegateCount = 201\n\n\nexport default class SlotStore {\n  completedSlots = []\n  hasCompletedSlotsForRound = false\n  isAwaitingBlock = true\n  isAwaitingSlot = true\n  roundSlots = new Map()\n  slotInProcess = null\n  slots = []\n  upcomingSlots = []\n  unprocessedSlots = []\n\n  constructor(nodeApi, blockStore, delegateStore, networkStore) {\n    this.nodeApi = nodeApi\n    this.blockStore = blockStore\n    this.delegateStore = delegateStore\n    this.networkStore = networkStore\n\n    when(() => this.networkStore.hasChangedServer, () => this.init())\n  }\n\n  async init() {\n    log('Initializing Slot Store.')\n    this.forgerData = await this.nodeApi.getRoundForgerData()\n    await when(() => this.blockStore.hasLoadedInitialBlocks && this.delegateStore.hasLoadedDelegates)\n\n    log('Generating initial slots.')\n    const blockInfo = {\n      endOfLastRoundTimestamp: this.blockStore.lastBlockOfLastRound.timestamp,\n      blocks: this.blockStore.initialBlocks.filter(b => b.height <= this.forgerData.currentBlock).reverse(),\n    }\n    \n    const lastSlotOfLastRound = this.getSlotNumber(blockInfo.endOfLastRoundTimestamp)\n    const firstSlot = lastSlotOfLastRound + 1\n    const currentSlot = this.forgerData.currentSlot\n    const slotDiff = firstSlot - currentSlot - 1\n    const reverseIndex = slotDiff % delegateCount\n    const firstForgerIndex = reverseIndex === 0 ? 0 : reverseIndex + delegateCount\n\n    let processingSlot = currentSlot\n    let forgerIndex = 0\n    const returnedForgers = []\n    while (processingSlot > lastSlotOfLastRound) {\n      returnedForgers.push({\n        globalSlot: processingSlot,\n        localSlot: forgerIndex + 1,\n        delegate: this.delegateStore.get(this.forgerData.delegates[forgerIndex]).username,\n      })\n      forgerIndex = forgerIndex === 0 ? 200 : forgerIndex - 1\n      processingSlot -= 1\n    }\n\n    const firstForgers = this.forgerData.delegates.slice(firstForgerIndex)\n    const remainingForgers = this.forgerData.delegates.slice(0, firstForgerIndex)\n    const forgingInfo = {\n      firstSlot,\n      currentSlot,\n      forgers: firstForgers.concat(remainingForgers),\n    }\n    const result = getSlotsFromInitialData(forgingInfo, blockInfo, this.delegateStore)    \n    console.log(result)\n\n    // this.watchForNextBlock()\n    // this.watchForUnprocessedSlot()\n\n    runInAction(() => {\n      this.slots.replace(result.slots)\n    }) \n  }\n\n  getSlotNumber(blockTimestamp) {\n\t\treturn Math.floor(blockTimestamp / blockInterval)\n\t}\n\n  watchForNextBlock() {\n    when(() => this.blockStore.hasNextBlock && this.isAwaitingBlock, () => this.processReceivedBlock())\n  }\n\n  getRoundSlot(totalSlot) {\n    // From BPL-node code\n    return this.roundSlots.get(totalSlot % 201)\n  }\n\n  processReceivedBlock() {\n    this.isAwaitingBlock = false\n    this.watchForNextBlock()\n\n    const nextBlock = this.blockStore.nextBlock()\n    log('Processing next block.', nextBlock)\n\n    const blockSlots = this.upcomingSlots.reduce((all, slot) => {\n      if (all.hasFoundProcessedSlot) {\n        all.upcomingSlots.push(slot)\n      } else {\n        const completedSlot = createSlotFromBlock(slot, all.block)\n        all.hasFoundProcessedSlot = !completedSlot.hasMissedBlock\n        all.unprocessedSlots.push(completedSlot)\n\n        if (completedSlot.hasMissedBlock) {\n          all.totalSlotCount += 1\n          let roundSlot = this.getRoundSlot(all.totalSlotCount)\n          let matchingDelegate = this.delegateStore.get(roundSlot.publicKey)\n          let lastSlot = this.upcomingSlots[this.upcomingSlots.length - 1]\n          all.additionalSlots.push(basicSlot(all.totalSlotCount, matchingDelegate, nextMsTimestamp(lastSlot.timestamp)))\n        }\n      }\n      return all\n    }, {\n      additionalSlots: [],\n      block: nextBlock,\n      hasFoundProcessedSlot: false,\n      totalSlotCount: this.completedSlots.length + this.upcomingSlots.length,\n      unprocessedSlots: [],\n      upcomingSlots: [],\n    })\n\n    this.unprocessedSlots.replace(this.unprocessedSlots.concat(blockSlots.unprocessedSlots))\n    this.upcomingSlots.replace(blockSlots.upcomingSlots.concat(blockSlots.additionalSlots))\n\n    this.hasCompletedSlotsForRound = this.unprocessedSlots.length === 0 && this.upcomingSlots.length === 0\n  }\n\n  watchForUnprocessedSlot() {\n    when(() => this.isAwaitingSlot && this.hasUnprocessedSlots, () => this.processNextSlot())\n  }\n  \n  get hasUnprocessedSlots() {\n    return this.unprocessedSlots.length > 0\n  }\n\n  nextUnprocessedSlot() {\n    return this.unprocessedSlots.shift()\n  }\n\n  processNextSlot() {\n    this.isAwaitingSlot = false\n    this.watchForUnprocessedSlot()\n\n    const nextSlot = this.nextUnprocessedSlot()\n    log('Processing next slot.', nextSlot)\n\n    this.slotInProcess = {\n      hasLeftUpcoming: false,\n      shouldBeVisible: true,\n      slot: nextSlot,\n    }\n\n    setTimeout(() => this.slotInProcess.shouldBeVisible = false, 0)\n  }\n\n  get hasSlotInProcess() {\n    return this.slotInProcess !== null\n  }\n\n  get missedBlockCount() {\n    return this.slots.filter(s => s.hasMissedBlock).length\n  }\n\n  get remainingSlotCount() {\n    return delegateCount - this.successfulForgeCount\n  }\n\n  get successfulForgeCount() {\n    return this.slots.filter(s => s.hasBeenCompleted && !s.hasMissedBlock).length\n  }\n  \n  get totalForgedAmount() {\n    return this.slots\n      .filter(s => !s.hasMissedBlock)\n      .reduce((sum, slot) => sum.plus(slot.totalForged), Big(0))\n  }\n\n  slotJoinedCompleted() {\n    this.isAwaitingSlot = true\n    this.completedSlots.unshift(this.slotInProcess.slot)\n    this.slotInProcess = null\n\n    if (!this.hasUnprocessedSlots) {\n      this.isAwaitingBlock = true\n    }\n  }\n\n  slotLeftUpcoming() {\n    this.slotInProcess.hasLeftUpcoming = true\n\n    setTimeout(() => this.slotInProcess.shouldBeVisible = true, 0)\n  }\n}\n\ndecorate(SlotStore, {\n  completedSlots: observable,\n  hasCompletedSlotsForRound: observable,\n  hasSlotInProcess: computed,\n  hasUnprocessedSlots: computed,\n  init: task,\n  isAwaitingBlock: observable,\n  isAwaitingSlot: observable,\n  missedBlockCount: computed,\n  nextUnprocessedSlot: action,\n  processReceivedBlock: action,\n  processNextSlot: action,\n  remainingSlotCount: computed,\n  slotInProcess: observable,\n  slotJoinedCompleted: action,\n  slotLeftUpcoming: action,\n  slots: observable,\n  successfulForgeCount: computed,\n  totalForgedAmount: computed,\n  upcomingSlots: observable,\n  unprocessedSlots: observable,\n})\n","import { fromApiString } from '../domain/util/format'\nimport { byDescending } from '../domain/util/sorters'\nimport { currentMsTimestamp, fromApiToMs, nextMsTimestamp } from '../domain/util/time'\n\nconst delegateCount = 201\n\nexport function createSlotFromBlock(slot, block) {\n  let hasMissedBlock = !block || slot.publicKey !== block.generatorPublicKey\n  let blockProps = hasMissedBlock ? {} : {\n    totalForged: fromApiString(block.totalForged),\n  }\n  return {\n    ... slot,\n    hasMissedBlock,\n    ... blockProps,\n    hasBeenCompleted: true,\n  }\n}\n\nexport function completedSlotFromDelegate(slot, delegate, timestamp) {\n  const blockProps = slot.hasMissedBlock ? {} : {\n    totalForged: fromApiString(slot.totalForged),\n  }\n  return {\n    ... basicSlot(slot.roundSlot, delegate, timestamp),\n    hasBeenCompleted: true,\n    hasMissedBlock: slot.hasMissedBlock,\n    ... blockProps,\n  }\n}\n\nexport function basicSlot(number, delegate, timestamp) {\n  return {\n    address: delegate.address,\n    hasBeenCompleted: false,\n    name: delegate.username,\n    number,\n    publicKey: delegate.publicKey,\n    rank: delegate.rate,\n    slot: number,\n    timestamp,\n    vote: fromApiString(delegate.vote),\n  }\n}\n\nexport default function getSlotsFromInitialData(forgingInfo, blockInfo, delegates) {\n\n  const blocksToProcess = blockInfo.blocks.concat([])\n  let result = {\n    blocksToProcess,\n    hasProcessedAllSlots: false,\n    lastProcessedRoundSlot: 0,\n    lastProcessedGlobalSlot: forgingInfo.firstSlot - 1,\n    lastTimestamp: nextMsTimestamp(fromApiToMs(blockInfo.endOfLastRoundTimestamp)),\n    remainingBlockCount: delegateCount - blocksToProcess.length,\n    slots: [],\n  }\n\n  while (!result.hasProcessedAllSlots || result.remainingBlockCount > 0) {\n    result = forgingInfo.forgers.reduce((all, forger) => {\n      const globalSlot = all.lastProcessedGlobalSlot + 1\n      all.hasProcessedAllSlots = globalSlot >= forgingInfo.currentSlot\n      if (all.hasProcessedAllSlots && all.remainingBlockCount === 0) return all\n\n      const roundSlot = all.lastProcessedRoundSlot + 1\n      const slotTimestamp = nextMsTimestamp(all.lastTimestamp)\n      let slot = basicSlot(roundSlot, delegates.get(forger), slotTimestamp)\n\n      if (!all.hasProcessedAllSlots) {\n        let block = all.blocksToProcess[0]\n        slot = createSlotFromBlock(slot, block)\n  \n        if (!slot.hasMissedBlock) {\n          all.blocksToProcess.shift()\n        }\n      } else {\n        all.remainingBlockCount -= 1\n      }\n\n      all.lastProcessedRoundSlot = roundSlot\n      all.lastProcessedGlobalSlot = globalSlot\n      all.lastTimestamp = slotTimestamp\n      all.slots.push(slot)\n      return all\n    }, result)\n  }\n\n  return result\n}\n","module.exports = require(\"@babel/polyfill\");","module.exports = require(\"@material-ui/core\");","module.exports = require(\"@material-ui/core/colors/green\");","module.exports = require(\"@material-ui/core/colors/grey\");","module.exports = require(\"@material-ui/core/colors/red\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/Announcement\");","module.exports = require(\"@material-ui/icons/CheckCircle\");","module.exports = require(\"@material-ui/icons/Update\");","module.exports = require(\"big-js\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"javascript-time-ago\");","module.exports = require(\"javascript-time-ago/locale/en\");","module.exports = require(\"mobx\");","module.exports = require(\"mobx-react\");","module.exports = require(\"mobx-task\");","module.exports = require(\"node-fetch\");","module.exports = require(\"path\");","module.exports = require(\"querystring\");","module.exports = require(\"react\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-jss/lib/JssProvider\");","module.exports = require(\"react-jss/lib/jss\");","module.exports = require(\"react-router-dom\");"],"sourceRoot":""}